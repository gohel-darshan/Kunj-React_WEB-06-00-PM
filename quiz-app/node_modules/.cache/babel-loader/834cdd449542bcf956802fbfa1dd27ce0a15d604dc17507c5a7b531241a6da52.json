{"ast":null,"code":"import _objectSpread from\"D:/R_W/react/quiz-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Power-ups system for enhanced gameplay\nexport const POWER_UPS={DOUBLE_POINTS:{id:'double_points',name:'Double Points',description:'Double points for the next 3 questions',icon:'üíé',cost:100,duration:3,effect:'multiplier',value:2},EXTRA_TIME:{id:'extra_time',name:'Extra Time',description:'Add 15 seconds to current question',icon:'‚è∞',cost:50,duration:1,effect:'time_bonus',value:15},FREEZE_TIME:{id:'freeze_time',name:'Freeze Time',description:'Stop the timer for 10 seconds',icon:'‚ùÑÔ∏è',cost:75,duration:1,effect:'time_freeze',value:10},LUCKY_GUESS:{id:'lucky_guess',name:'Lucky Guess',description:'Automatically get the next question right',icon:'üçÄ',cost:150,duration:1,effect:'auto_correct',value:1},HINT_MASTER:{id:'hint_master',name:'Hint Master',description:'Get 3 extra hints',icon:'üí°',cost:80,duration:0,effect:'extra_hints',value:3},SHIELD:{id:'shield',name:'Shield',description:'Next wrong answer won\\'t count against you',icon:'üõ°Ô∏è',cost:120,duration:1,effect:'mistake_protection',value:1},CATEGORY_REVEAL:{id:'category_reveal',name:'Category Reveal',description:'Show the category for next 5 questions',icon:'üîç',cost:60,duration:5,effect:'category_hint',value:1},STREAK_SAVER:{id:'streak_saver',name:'Streak Saver',description:'Maintain streak even if you get one wrong',icon:'üîó',cost:90,duration:1,effect:'streak_protection',value:1}};export class PowerUpManager{constructor(){this.activePowerUps=new Map();this.playerCoins=0;}// Initialize with saved data\ninitialize(savedData){this.playerCoins=savedData.coins||0;this.activePowerUps=new Map(savedData.activePowerUps||[]);}// Purchase a power-up\npurchasePowerUp(powerUpId){const powerUp=POWER_UPS[powerUpId];if(!powerUp||this.playerCoins<powerUp.cost){return{success:false,message:'Insufficient coins'};}this.playerCoins-=powerUp.cost;// Add to inventory or activate immediately\nif(powerUp.duration===0){// Instant effect power-ups\nreturn{success:true,message:'Power-up activated!',effect:powerUp};}else{// Duration-based power-ups\nthis.activePowerUps.set(powerUpId,_objectSpread(_objectSpread({},powerUp),{},{remainingDuration:powerUp.duration,activated:false}));return{success:true,message:'Power-up ready to use!'};}}// Activate a power-up\nactivatePowerUp(powerUpId){const powerUp=this.activePowerUps.get(powerUpId);if(!powerUp){return{success:false,message:'Power-up not available'};}powerUp.activated=true;return{success:true,effect:powerUp};}// Apply power-up effects\napplyEffects(context){const effects={pointsMultiplier:1,timeBonus:0,autoCorrect:false,mistakeProtection:false,streakProtection:false,categoryHint:false};this.activePowerUps.forEach((powerUp,id)=>{if(!powerUp.activated)return;switch(powerUp.effect){case'multiplier':effects.pointsMultiplier*=powerUp.value;break;case'time_bonus':effects.timeBonus+=powerUp.value;break;case'auto_correct':effects.autoCorrect=true;break;case'mistake_protection':effects.mistakeProtection=true;break;case'streak_protection':effects.streakProtection=true;break;case'category_hint':effects.categoryHint=true;break;}});return effects;}// Reduce duration after each question\nupdateDurations(){const toRemove=[];this.activePowerUps.forEach((powerUp,id)=>{if(powerUp.activated){powerUp.remainingDuration--;if(powerUp.remainingDuration<=0){toRemove.push(id);}}});toRemove.forEach(id=>this.activePowerUps.delete(id));}// Add coins (earned from quiz performance)\naddCoins(amount){this.playerCoins+=amount;}// Get current state\ngetState(){return{coins:this.playerCoins,activePowerUps:Array.from(this.activePowerUps.entries()),availablePowerUps:Object.values(POWER_UPS)};}// Calculate coins earned from quiz performance\nstatic calculateCoinsEarned(score,difficulty,streak,timeBonus){let coins=score*2;// Base: 2 coins per correct answer\n// Difficulty bonus\nconst difficultyMultiplier={easy:1,medium:1.5,hard:2};coins*=difficultyMultiplier[difficulty]||1;// Streak bonus\nif(streak>=5)coins+=streak*2;// Time bonus\nif(timeBonus>0)coins+=Math.floor(timeBonus/5);return Math.floor(coins);}}","map":{"version":3,"names":["POWER_UPS","DOUBLE_POINTS","id","name","description","icon","cost","duration","effect","value","EXTRA_TIME","FREEZE_TIME","LUCKY_GUESS","HINT_MASTER","SHIELD","CATEGORY_REVEAL","STREAK_SAVER","PowerUpManager","constructor","activePowerUps","Map","playerCoins","initialize","savedData","coins","purchasePowerUp","powerUpId","powerUp","success","message","set","_objectSpread","remainingDuration","activated","activatePowerUp","get","applyEffects","context","effects","pointsMultiplier","timeBonus","autoCorrect","mistakeProtection","streakProtection","categoryHint","forEach","updateDurations","toRemove","push","delete","addCoins","amount","getState","Array","from","entries","availablePowerUps","Object","values","calculateCoinsEarned","score","difficulty","streak","difficultyMultiplier","easy","medium","hard","Math","floor"],"sources":["D:/R_W/react/quiz-app/src/utils/powerUps.js"],"sourcesContent":["// Power-ups system for enhanced gameplay\r\nexport const POWER_UPS = {\r\n  DOUBLE_POINTS: {\r\n    id: 'double_points',\r\n    name: 'Double Points',\r\n    description: 'Double points for the next 3 questions',\r\n    icon: 'üíé',\r\n    cost: 100,\r\n    duration: 3,\r\n    effect: 'multiplier',\r\n    value: 2\r\n  },\r\n  EXTRA_TIME: {\r\n    id: 'extra_time',\r\n    name: 'Extra Time',\r\n    description: 'Add 15 seconds to current question',\r\n    icon: '‚è∞',\r\n    cost: 50,\r\n    duration: 1,\r\n    effect: 'time_bonus',\r\n    value: 15\r\n  },\r\n  FREEZE_TIME: {\r\n    id: 'freeze_time',\r\n    name: 'Freeze Time',\r\n    description: 'Stop the timer for 10 seconds',\r\n    icon: '‚ùÑÔ∏è',\r\n    cost: 75,\r\n    duration: 1,\r\n    effect: 'time_freeze',\r\n    value: 10\r\n  },\r\n  LUCKY_GUESS: {\r\n    id: 'lucky_guess',\r\n    name: 'Lucky Guess',\r\n    description: 'Automatically get the next question right',\r\n    icon: 'üçÄ',\r\n    cost: 150,\r\n    duration: 1,\r\n    effect: 'auto_correct',\r\n    value: 1\r\n  },\r\n  HINT_MASTER: {\r\n    id: 'hint_master',\r\n    name: 'Hint Master',\r\n    description: 'Get 3 extra hints',\r\n    icon: 'üí°',\r\n    cost: 80,\r\n    duration: 0,\r\n    effect: 'extra_hints',\r\n    value: 3\r\n  },\r\n  SHIELD: {\r\n    id: 'shield',\r\n    name: 'Shield',\r\n    description: 'Next wrong answer won\\'t count against you',\r\n    icon: 'üõ°Ô∏è',\r\n    cost: 120,\r\n    duration: 1,\r\n    effect: 'mistake_protection',\r\n    value: 1\r\n  },\r\n  CATEGORY_REVEAL: {\r\n    id: 'category_reveal',\r\n    name: 'Category Reveal',\r\n    description: 'Show the category for next 5 questions',\r\n    icon: 'üîç',\r\n    cost: 60,\r\n    duration: 5,\r\n    effect: 'category_hint',\r\n    value: 1\r\n  },\r\n  STREAK_SAVER: {\r\n    id: 'streak_saver',\r\n    name: 'Streak Saver',\r\n    description: 'Maintain streak even if you get one wrong',\r\n    icon: 'üîó',\r\n    cost: 90,\r\n    duration: 1,\r\n    effect: 'streak_protection',\r\n    value: 1\r\n  }\r\n};\r\n\r\nexport class PowerUpManager {\r\n  constructor() {\r\n    this.activePowerUps = new Map();\r\n    this.playerCoins = 0;\r\n  }\r\n\r\n  // Initialize with saved data\r\n  initialize(savedData) {\r\n    this.playerCoins = savedData.coins || 0;\r\n    this.activePowerUps = new Map(savedData.activePowerUps || []);\r\n  }\r\n\r\n  // Purchase a power-up\r\n  purchasePowerUp(powerUpId) {\r\n    const powerUp = POWER_UPS[powerUpId];\r\n    if (!powerUp || this.playerCoins < powerUp.cost) {\r\n      return { success: false, message: 'Insufficient coins' };\r\n    }\r\n\r\n    this.playerCoins -= powerUp.cost;\r\n    \r\n    // Add to inventory or activate immediately\r\n    if (powerUp.duration === 0) {\r\n      // Instant effect power-ups\r\n      return { success: true, message: 'Power-up activated!', effect: powerUp };\r\n    } else {\r\n      // Duration-based power-ups\r\n      this.activePowerUps.set(powerUpId, {\r\n        ...powerUp,\r\n        remainingDuration: powerUp.duration,\r\n        activated: false\r\n      });\r\n      return { success: true, message: 'Power-up ready to use!' };\r\n    }\r\n  }\r\n\r\n  // Activate a power-up\r\n  activatePowerUp(powerUpId) {\r\n    const powerUp = this.activePowerUps.get(powerUpId);\r\n    if (!powerUp) {\r\n      return { success: false, message: 'Power-up not available' };\r\n    }\r\n\r\n    powerUp.activated = true;\r\n    return { success: true, effect: powerUp };\r\n  }\r\n\r\n  // Apply power-up effects\r\n  applyEffects(context) {\r\n    const effects = {\r\n      pointsMultiplier: 1,\r\n      timeBonus: 0,\r\n      autoCorrect: false,\r\n      mistakeProtection: false,\r\n      streakProtection: false,\r\n      categoryHint: false\r\n    };\r\n\r\n    this.activePowerUps.forEach((powerUp, id) => {\r\n      if (!powerUp.activated) return;\r\n\r\n      switch (powerUp.effect) {\r\n        case 'multiplier':\r\n          effects.pointsMultiplier *= powerUp.value;\r\n          break;\r\n        case 'time_bonus':\r\n          effects.timeBonus += powerUp.value;\r\n          break;\r\n        case 'auto_correct':\r\n          effects.autoCorrect = true;\r\n          break;\r\n        case 'mistake_protection':\r\n          effects.mistakeProtection = true;\r\n          break;\r\n        case 'streak_protection':\r\n          effects.streakProtection = true;\r\n          break;\r\n        case 'category_hint':\r\n          effects.categoryHint = true;\r\n          break;\r\n      }\r\n    });\r\n\r\n    return effects;\r\n  }\r\n\r\n  // Reduce duration after each question\r\n  updateDurations() {\r\n    const toRemove = [];\r\n    \r\n    this.activePowerUps.forEach((powerUp, id) => {\r\n      if (powerUp.activated) {\r\n        powerUp.remainingDuration--;\r\n        if (powerUp.remainingDuration <= 0) {\r\n          toRemove.push(id);\r\n        }\r\n      }\r\n    });\r\n\r\n    toRemove.forEach(id => this.activePowerUps.delete(id));\r\n  }\r\n\r\n  // Add coins (earned from quiz performance)\r\n  addCoins(amount) {\r\n    this.playerCoins += amount;\r\n  }\r\n\r\n  // Get current state\r\n  getState() {\r\n    return {\r\n      coins: this.playerCoins,\r\n      activePowerUps: Array.from(this.activePowerUps.entries()),\r\n      availablePowerUps: Object.values(POWER_UPS)\r\n    };\r\n  }\r\n\r\n  // Calculate coins earned from quiz performance\r\n  static calculateCoinsEarned(score, difficulty, streak, timeBonus) {\r\n    let coins = score * 2; // Base: 2 coins per correct answer\r\n    \r\n    // Difficulty bonus\r\n    const difficultyMultiplier = { easy: 1, medium: 1.5, hard: 2 };\r\n    coins *= difficultyMultiplier[difficulty] || 1;\r\n    \r\n    // Streak bonus\r\n    if (streak >= 5) coins += streak * 2;\r\n    \r\n    // Time bonus\r\n    if (timeBonus > 0) coins += Math.floor(timeBonus / 5);\r\n    \r\n    return Math.floor(coins);\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}