{"ast":null,"code":"var _jsxFileName = \"D:\\\\R_W\\\\react\\\\new_quize_app\\\\quiz-app\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Timer from './Timer';\nimport ProgressBar from './ProgressBar';\nimport useQuiz from '../hooks/useQuiz';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    questions,\n    currentQuestionIndex,\n    score,\n    totalQuestions,\n    isQuizFinished,\n    handleAnswerOptionClick,\n    resetQuiz,\n    selectedAnswers,\n    timer // add timer to destructure\n  } = useQuiz();\n  const [showResult, setShowResult] = useState(false);\n  useEffect(() => {\n    if (isQuizFinished) {\n      setShowResult(true);\n    }\n  }, [isQuizFinished]);\n\n  // Calculate progress percentage\n  const progress = (currentQuestionIndex + 1) / totalQuestions * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showResult ? /*#__PURE__*/_jsxDEV(Result, {\n      score: score,\n      totalQuestions: totalQuestions,\n      onRestart: resetQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        duration: timer,\n        onTimeUp: resetQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        question: questions[currentQuestionIndex].question,\n        options: questions[currentQuestionIndex].options,\n        selectedOption: selectedAnswers[currentQuestionIndex] || null,\n        onOptionSelect: handleAnswerOptionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"B6AnB/w5hwDPvEmqM26ZsRSoHwU=\", false, function () {\n  return [useQuiz];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Question","Result","Timer","ProgressBar","useQuiz","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","currentQuestionIndex","score","totalQuestions","isQuizFinished","handleAnswerOptionClick","resetQuiz","selectedAnswers","timer","showResult","setShowResult","progress","className","children","onRestart","fileName","_jsxFileName","lineNumber","columnNumber","duration","onTimeUp","question","options","selectedOption","onOptionSelect","_c","$RefreshReg$"],"sources":["D:/R_W/react/new_quize_app/quiz-app/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Timer from './Timer';\nimport ProgressBar from './ProgressBar';\nimport useQuiz from '../hooks/useQuiz';\nimport './Quiz.css';\n\nconst Quiz = () => {\n    const {\n        questions,\n        currentQuestionIndex,\n        score,\n        totalQuestions,\n        isQuizFinished,\n        handleAnswerOptionClick,\n        resetQuiz,\n        selectedAnswers,\n        timer, // add timer to destructure\n    } = useQuiz();\n\n    const [showResult, setShowResult] = useState(false);\n\n    useEffect(() => {\n        if (isQuizFinished) {\n            setShowResult(true);\n        }\n    }, [isQuizFinished]);\n\n    // Calculate progress percentage\n    const progress = ((currentQuestionIndex + 1) / totalQuestions) * 100;\n\n    return (\n        <div className=\"quiz-container\">\n            {showResult ? (\n                <Result score={score} totalQuestions={totalQuestions} onRestart={resetQuiz} />\n            ) : (\n                <>\n                    <ProgressBar progress={progress} />\n                    <Timer duration={timer} onTimeUp={resetQuiz} />\n                    <Question\n                        question={questions[currentQuestionIndex].question}\n                        options={questions[currentQuestionIndex].options}\n                        selectedOption={selectedAnswers[currentQuestionIndex] || null}\n                        onOptionSelect={handleAnswerOptionClick}\n                    />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IACFC,SAAS;IACTC,oBAAoB;IACpBC,KAAK;IACLC,cAAc;IACdC,cAAc;IACdC,uBAAuB;IACvBC,SAAS;IACTC,eAAe;IACfC,KAAK,CAAE;EACX,CAAC,GAAGf,OAAO,CAAC,CAAC;EAEb,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,IAAIgB,cAAc,EAAE;MAChBM,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMO,QAAQ,GAAI,CAACV,oBAAoB,GAAG,CAAC,IAAIE,cAAc,GAAI,GAAG;EAEpE,oBACIR,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BJ,UAAU,gBACPd,OAAA,CAACL,MAAM;MAACY,KAAK,EAAEA,KAAM;MAACC,cAAc,EAAEA,cAAe;MAACW,SAAS,EAAER;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9EvB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACIlB,OAAA,CAACH,WAAW;QAACmB,QAAQ,EAAEA;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCvB,OAAA,CAACJ,KAAK;QAAC4B,QAAQ,EAAEX,KAAM;QAACY,QAAQ,EAAEd;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CvB,OAAA,CAACN,QAAQ;QACLgC,QAAQ,EAAErB,SAAS,CAACC,oBAAoB,CAAC,CAACoB,QAAS;QACnDC,OAAO,EAAEtB,SAAS,CAACC,oBAAoB,CAAC,CAACqB,OAAQ;QACjDC,cAAc,EAAEhB,eAAe,CAACN,oBAAoB,CAAC,IAAI,IAAK;QAC9DuB,cAAc,EAAEnB;MAAwB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA,eACJ;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CA1CID,IAAI;EAAA,QAWFL,OAAO;AAAA;AAAAgC,EAAA,GAXT3B,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}