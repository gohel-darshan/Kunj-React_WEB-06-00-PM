{"ast":null,"code":"var _jsxFileName = \"D:\\\\R_W\\\\react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { questionDatabase, getQuestionsByDifficulty, shuffleArray } from './data/questions';\nimport soundManager from './utils/soundManager';\nimport { saveScore, getTopScores, saveTheme, getTheme, saveSoundSettings, getSoundSettings, savePlayerStats } from './utils/localStorage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _currentQuestion$cate;\n  // Original useState hooks\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [totalScore, setTotalScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n\n  // Enhanced useState hooks for new features\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [difficulty, setDifficulty] = useState('easy');\n  const [theme, setTheme] = useState('light');\n  const [hintsUsed, setHintsUsed] = useState(0);\n  const [playerName, setPlayerName] = useState('');\n  const [questionOrder, setQuestionOrder] = useState([]);\n  const [detailedResults, setDetailedResults] = useState([]);\n\n  // Additional state for enhanced features\n  const [gamePhase, setGamePhase] = useState('setup'); // setup, playing, results, leaderboard\n  const [availableHints, setAvailableHints] = useState(3);\n  const [showHint, setShowHint] = useState(false);\n  const [eliminatedOptions, setEliminatedOptions] = useState([]);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [startTime, setStartTime] = useState(null);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [isMuted, setIsMuted] = useState(false);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n  const [category, setCategory] = useState('all');\n\n  // Initialize app\n  useEffect(() => {\n    // Load saved settings\n    const savedTheme = getTheme();\n    const soundSettings = getSoundSettings();\n    setTheme(savedTheme);\n    setIsMuted(soundSettings.muted);\n\n    // Initialize sound manager\n    soundManager.initSounds();\n    soundManager.setVolume(soundSettings.volume);\n    if (soundSettings.muted) {\n      soundManager.toggleMute();\n    }\n\n    // Load leaderboard\n    setLeaderboard(getTopScores());\n\n    // Apply theme to document\n    document.documentElement.setAttribute('data-theme', savedTheme);\n  }, []);\n\n  // Timer effect\n  useEffect(() => {\n    if (gamePhase === 'playing' && timeLeft > 0) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n        if (timeLeft <= 10 && timeLeft > 0) {\n          soundManager.play('tick');\n        }\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && gamePhase === 'playing') {\n      handleTimeUp();\n    }\n  }, [timeLeft, gamePhase]);\n\n  // Get time limit based on difficulty\n  const getTimeLimit = () => {\n    switch (difficulty) {\n      case 'easy':\n        return 45;\n      case 'medium':\n        return 30;\n      case 'hard':\n        return 20;\n      default:\n        return 30;\n    }\n  };\n\n  // Get score multiplier based on difficulty\n  const getScoreMultiplier = () => {\n    switch (difficulty) {\n      case 'easy':\n        return 1;\n      case 'medium':\n        return 1.5;\n      case 'hard':\n        return 2;\n      default:\n        return 1;\n    }\n  };\n\n  // Start quiz\n  const startQuiz = () => {\n    if (!playerName.trim()) {\n      alert('Please enter your name!');\n      return;\n    }\n\n    // Get questions based on difficulty\n    const questions = getQuestionsByDifficulty(difficulty);\n    const shuffledQuestions = shuffleArray(questions).slice(0, 10); // Take 10 random questions\n\n    setQuestionOrder(shuffledQuestions);\n    setGamePhase('playing');\n    setStartTime(Date.now());\n    setQuestionStartTime(Date.now());\n    setTimeLeft(getTimeLimit());\n    setCurrentQuestionIndex(0);\n    setTotalScore(0);\n    setSelectedAnswer(null);\n    setDetailedResults([]);\n    setAvailableHints(3);\n    setHintsUsed(0);\n    setShowHint(false);\n    setEliminatedOptions([]);\n  };\n\n  // Handle time up\n  const handleTimeUp = () => {\n    handleAnswerSubmit(null, true);\n  };\n\n  // Handle answer submission\n  const handleAnswerSubmit = (selectedOptionIndex, isTimeUp = false) => {\n    const currentQuestion = questionOrder[currentQuestionIndex];\n    const questionTime = Date.now() - questionStartTime;\n    const isCorrect = selectedOptionIndex === currentQuestion.correctAnswer;\n\n    // Calculate points\n    let points = 0;\n    if (isCorrect && !isTimeUp) {\n      points = Math.round(10 * getScoreMultiplier());\n      // Bonus for quick answers\n      if (questionTime < 10000) points += 5;\n      // Bonus for not using hints\n      if (hintsUsed === 0) points += 3;\n    }\n\n    // Play sound\n    if (isTimeUp) {\n      soundManager.play('wrong');\n    } else if (isCorrect) {\n      soundManager.play('correct');\n    } else {\n      soundManager.play('wrong');\n    }\n\n    // Save detailed result\n    const result = {\n      question: currentQuestion.question,\n      selectedAnswer: selectedOptionIndex,\n      correctAnswer: currentQuestion.correctAnswer,\n      options: currentQuestion.options,\n      isCorrect,\n      timeSpent: questionTime,\n      points,\n      isTimeUp\n    };\n    setDetailedResults(prev => [...prev, result]);\n    setSelectedAnswer(selectedOptionIndex);\n    if (isCorrect) {\n      setTotalScore(prev => prev + points);\n    }\n\n    // Move to next question or show results\n    setTimeout(() => {\n      const nextQuestionIndex = currentQuestionIndex + 1;\n      if (nextQuestionIndex < questionOrder.length) {\n        setCurrentQuestionIndex(nextQuestionIndex);\n        setSelectedAnswer(null);\n        setTimeLeft(getTimeLimit());\n        setQuestionStartTime(Date.now());\n        setShowHint(false);\n        setEliminatedOptions([]);\n      } else {\n        finishQuiz();\n      }\n    }, 1500);\n  };\n\n  // Finish quiz\n  const finishQuiz = () => {\n    const totalTime = Date.now() - startTime;\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\n\n    // Save score and stats\n    const scoreData = {\n      correct: correctAnswers,\n      total: questionOrder.length,\n      points: totalScore,\n      timeSpent: totalTime\n    };\n    saveScore(playerName, scoreData, difficulty, category, totalTime);\n    savePlayerStats({\n      totalQuestions: questionOrder.length,\n      correct: correctAnswers,\n      timeSpent: totalTime\n    });\n\n    // Update leaderboard\n    setLeaderboard(getTopScores());\n\n    // Play completion sound\n    soundManager.play('complete');\n    setGamePhase('results');\n  };\n\n  // Use hint - 50/50\n  const useFiftyFifty = () => {\n    if (availableHints <= 0) return;\n    const currentQuestion = questionOrder[currentQuestionIndex];\n    const correctAnswer = currentQuestion.correctAnswer;\n    const wrongOptions = [0, 1, 2, 3].filter(i => i !== correctAnswer);\n\n    // Randomly select 2 wrong options to eliminate\n    const toEliminate = shuffleArray(wrongOptions).slice(0, 2);\n    setEliminatedOptions(toEliminate);\n    setAvailableHints(prev => prev - 1);\n    setHintsUsed(prev => prev + 1);\n    soundManager.play('hint');\n  };\n\n  // Skip question\n  const skipQuestion = () => {\n    if (availableHints <= 0) return;\n    setAvailableHints(prev => prev - 1);\n    setHintsUsed(prev => prev + 1);\n    handleAnswerSubmit(null, false);\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    saveTheme(newTheme);\n    document.documentElement.setAttribute('data-theme', newTheme);\n  };\n\n  // Toggle sound\n  const toggleSound = () => {\n    const newMutedState = soundManager.toggleMute();\n    setIsMuted(newMutedState);\n    saveSoundSettings({\n      muted: newMutedState,\n      volume: 0.5\n    });\n  };\n\n  // Restart quiz\n  const restartQuiz = () => {\n    setGamePhase('setup');\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setTotalScore(0);\n    setShowScore(false);\n    setTimeLeft(30);\n    setDetailedResults([]);\n    setAvailableHints(3);\n    setHintsUsed(0);\n    setShowHint(false);\n    setEliminatedOptions([]);\n  };\n\n  // Get current question\n  const currentQuestion = questionOrder[currentQuestionIndex];\n\n  // Calculate progress percentage\n  const progressPercentage = questionOrder.length > 0 ? currentQuestionIndex / questionOrder.length * 100 : 0;\n\n  // Get score message\n  const getScoreMessage = () => {\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\n    const percentage = Math.round(correctAnswers / questionOrder.length * 100);\n    if (percentage >= 90) return \"Outstanding! 🏆\";\n    if (percentage >= 80) return \"Excellent! 🎉\";\n    if (percentage >= 70) return \"Great job! 👍\";\n    if (percentage >= 60) return \"Good work! 👌\";\n    if (percentage >= 50) return \"Not bad! 😊\";\n    return \"Keep practicing! 💪\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Enhanced Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: toggleTheme,\n          title: \"Toggle Theme\",\n          children: theme === 'light' ? '🌙' : '☀️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: toggleSound,\n          title: \"Toggle Sound\",\n          children: isMuted ? '🔇' : '🔊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowLeaderboard(!showLeaderboard),\n          title: \"Leaderboard\",\n          children: \"\\uD83C\\uDFC6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [gamePhase === 'setup' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"setup-title\",\n          children: \"Ready to Start?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setup-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"playerName\",\n              children: \"Your Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"playerName\",\n              type: \"text\",\n              value: playerName,\n              onChange: e => setPlayerName(e.target.value),\n              placeholder: \"Enter your name\",\n              className: \"name-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"difficulty\",\n              children: \"Difficulty Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"difficulty\",\n              value: difficulty,\n              onChange: e => setDifficulty(e.target.value),\n              className: \"difficulty-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"easy\",\n                children: \"Easy (45s per question)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"medium\",\n                children: \"Medium (30s per question)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"hard\",\n                children: \"Hard (20s per question)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score Multiplier: \", getScoreMultiplier(), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You'll get 3 hints to help you!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-button\",\n            onClick: startQuiz,\n            children: \"Start Quiz \\uD83D\\uDE80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), gamePhase === 'playing' && currentQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${progressPercentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-text\",\n            children: [\"Question \", currentQuestionIndex + 1, \" of \", questionOrder.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timer ${timeLeft <= 10 ? 'timer-warning' : ''}`,\n            children: [\"\\u23F0 \", timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-fill\",\n              style: {\n                width: `${timeLeft / getTimeLimit() * 100}%`,\n                backgroundColor: timeLeft <= 10 ? '#ff4757' : '#2ed573'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-category\",\n              children: [(_currentQuestion$cate = currentQuestion.category) === null || _currentQuestion$cate === void 0 ? void 0 : _currentQuestion$cate.toUpperCase(), \" - \", difficulty.toUpperCase()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-score\",\n              children: [\"Score: \", totalScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-options\",\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `answer-button ${eliminatedOptions.includes(index) ? 'eliminated' : ''}`,\n              onClick: () => handleAnswerSubmit(index),\n              disabled: selectedAnswer !== null || eliminatedOptions.includes(index),\n              style: {\n                backgroundColor: selectedAnswer === index ? index === currentQuestion.correctAnswer ? '#d4edda' : '#f8d7da' : eliminatedOptions.includes(index) ? '#f1f2f6' : '#ffffff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-letter\",\n                children: String.fromCharCode(65 + index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hints-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hints-available\",\n              children: [\"Hints Available: \", availableHints]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hint-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hint-button\",\n                onClick: useFiftyFifty,\n                disabled: availableHints <= 0 || eliminatedOptions.length > 0,\n                title: \"Remove 2 wrong answers\",\n                children: \"50/50 \\uD83D\\uDCA1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hint-button\",\n                onClick: skipQuestion,\n                disabled: availableHints <= 0,\n                title: \"Skip this question\",\n                children: \"Skip \\u23ED\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), gamePhase === 'results' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"results-title\",\n          children: \"Quiz Complete! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-number\",\n              children: totalScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-label\",\n              children: \"Total Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [detailedResults.filter(r => r.isCorrect).length, \"/\", questionOrder.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [Math.round(detailedResults.filter(r => r.isCorrect).length / questionOrder.length * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Accuracy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-message\",\n          children: getScoreMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detailed-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Question Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), detailedResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `result-item ${result.isCorrect ? 'correct' : 'incorrect'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-number\",\n                children: [\"Q\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `result-status ${result.isCorrect ? 'correct' : 'incorrect'}`,\n                children: result.isCorrect ? '✅' : '❌'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-points\",\n                children: [\"+\", result.points, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-question\",\n              children: result.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-answers\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"your-answer\",\n                children: [\"Your answer: \", result.selectedAnswer !== null ? result.options[result.selectedAnswer] : 'No answer']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 21\n              }, this), !result.isCorrect && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"correct-answer\",\n                children: [\"Correct answer: \", result.options[result.correctAnswer]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-time\",\n              children: [\"Time: \", Math.round(result.timeSpent / 1000), \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button primary\",\n            onClick: restartQuiz,\n            children: \"Play Again \\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button secondary\",\n            onClick: () => setShowLeaderboard(true),\n            children: \"View Leaderboard \\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), showLeaderboard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => setShowLeaderboard(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFC6 Leaderboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-button\",\n              onClick: () => setShowLeaderboard(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-list\",\n            children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No scores yet. Be the first to play!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this) : leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leaderboard-entry\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rank\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-name\",\n                  children: entry.playerName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-details\",\n                  children: [entry.score.correct, \"/\", entry.score.total, \" correct \\u2022 \", entry.difficulty, \" \\u2022 \", entry.percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-score\",\n                children: [entry.score.points, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 23\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kHnFOLuY41lCVGhsR/TZfMkMaY4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","questionDatabase","getQuestionsByDifficulty","shuffleArray","soundManager","saveScore","getTopScores","saveTheme","getTheme","saveSoundSettings","getSoundSettings","savePlayerStats","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_currentQuestion$cate","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","totalScore","setTotalScore","showScore","setShowScore","timeLeft","setTimeLeft","difficulty","setDifficulty","theme","setTheme","hintsUsed","setHintsUsed","playerName","setPlayerName","questionOrder","setQuestionOrder","detailedResults","setDetailedResults","gamePhase","setGamePhase","availableHints","setAvailableHints","showHint","setShowHint","eliminatedOptions","setEliminatedOptions","leaderboard","setLeaderboard","startTime","setStartTime","questionStartTime","setQuestionStartTime","isMuted","setIsMuted","showLeaderboard","setShowLeaderboard","category","setCategory","savedTheme","soundSettings","muted","initSounds","setVolume","volume","toggleMute","document","documentElement","setAttribute","timer","setTimeout","play","clearTimeout","handleTimeUp","getTimeLimit","getScoreMultiplier","startQuiz","trim","alert","questions","shuffledQuestions","slice","Date","now","handleAnswerSubmit","selectedOptionIndex","isTimeUp","currentQuestion","questionTime","isCorrect","correctAnswer","points","Math","round","result","question","options","timeSpent","prev","nextQuestionIndex","length","finishQuiz","totalTime","correctAnswers","filter","r","scoreData","correct","total","totalQuestions","useFiftyFifty","wrongOptions","i","toEliminate","skipQuestion","toggleTheme","newTheme","toggleSound","newMutedState","restartQuiz","progressPercentage","getScoreMessage","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","htmlFor","id","type","value","onChange","e","target","placeholder","style","width","backgroundColor","toUpperCase","map","option","index","includes","disabled","String","fromCharCode","stopPropagation","entry","score","_c","$RefreshReg$"],"sources":["D:/R_W/react/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { questionDatabase, getQuestionsByDifficulty, shuffleArray } from './data/questions';\r\nimport soundManager from './utils/soundManager';\r\nimport { saveScore, getTopScores, saveTheme, getTheme, saveSoundSettings, getSoundSettings, savePlayerStats } from './utils/localStorage';\r\n\r\nfunction App() {\r\n  // Original useState hooks\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  // Enhanced useState hooks for new features\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [theme, setTheme] = useState('light');\r\n  const [hintsUsed, setHintsUsed] = useState(0);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [questionOrder, setQuestionOrder] = useState([]);\r\n  const [detailedResults, setDetailedResults] = useState([]);\r\n  \r\n  // Additional state for enhanced features\r\n  const [gamePhase, setGamePhase] = useState('setup'); // setup, playing, results, leaderboard\r\n  const [availableHints, setAvailableHints] = useState(3);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [eliminatedOptions, setEliminatedOptions] = useState([]);\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [questionStartTime, setQuestionStartTime] = useState(null);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n  const [category, setCategory] = useState('all');\r\n\r\n  // Initialize app\r\n  useEffect(() => {\r\n    // Load saved settings\r\n    const savedTheme = getTheme();\r\n    const soundSettings = getSoundSettings();\r\n    \r\n    setTheme(savedTheme);\r\n    setIsMuted(soundSettings.muted);\r\n    \r\n    // Initialize sound manager\r\n    soundManager.initSounds();\r\n    soundManager.setVolume(soundSettings.volume);\r\n    if (soundSettings.muted) {\r\n      soundManager.toggleMute();\r\n    }\r\n    \r\n    // Load leaderboard\r\n    setLeaderboard(getTopScores());\r\n    \r\n    // Apply theme to document\r\n    document.documentElement.setAttribute('data-theme', savedTheme);\r\n  }, []);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gamePhase === 'playing' && timeLeft > 0) {\r\n      const timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n        if (timeLeft <= 10 && timeLeft > 0) {\r\n          soundManager.play('tick');\r\n        }\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0 && gamePhase === 'playing') {\r\n      handleTimeUp();\r\n    }\r\n  }, [timeLeft, gamePhase]);\r\n\r\n  // Get time limit based on difficulty\r\n  const getTimeLimit = () => {\r\n    switch (difficulty) {\r\n      case 'easy': return 45;\r\n      case 'medium': return 30;\r\n      case 'hard': return 20;\r\n      default: return 30;\r\n    }\r\n  };\r\n\r\n  // Get score multiplier based on difficulty\r\n  const getScoreMultiplier = () => {\r\n    switch (difficulty) {\r\n      case 'easy': return 1;\r\n      case 'medium': return 1.5;\r\n      case 'hard': return 2;\r\n      default: return 1;\r\n    }\r\n  };\r\n\r\n  // Start quiz\r\n  const startQuiz = () => {\r\n    if (!playerName.trim()) {\r\n      alert('Please enter your name!');\r\n      return;\r\n    }\r\n\r\n    // Get questions based on difficulty\r\n    const questions = getQuestionsByDifficulty(difficulty);\r\n    const shuffledQuestions = shuffleArray(questions).slice(0, 10); // Take 10 random questions\r\n    \r\n    setQuestionOrder(shuffledQuestions);\r\n    setGamePhase('playing');\r\n    setStartTime(Date.now());\r\n    setQuestionStartTime(Date.now());\r\n    setTimeLeft(getTimeLimit());\r\n    setCurrentQuestionIndex(0);\r\n    setTotalScore(0);\r\n    setSelectedAnswer(null);\r\n    setDetailedResults([]);\r\n    setAvailableHints(3);\r\n    setHintsUsed(0);\r\n    setShowHint(false);\r\n    setEliminatedOptions([]);\r\n  };\r\n\r\n  // Handle time up\r\n  const handleTimeUp = () => {\r\n    handleAnswerSubmit(null, true);\r\n  };\r\n\r\n  // Handle answer submission\r\n  const handleAnswerSubmit = (selectedOptionIndex, isTimeUp = false) => {\r\n    const currentQuestion = questionOrder[currentQuestionIndex];\r\n    const questionTime = Date.now() - questionStartTime;\r\n    const isCorrect = selectedOptionIndex === currentQuestion.correctAnswer;\r\n    \r\n    // Calculate points\r\n    let points = 0;\r\n    if (isCorrect && !isTimeUp) {\r\n      points = Math.round(10 * getScoreMultiplier());\r\n      // Bonus for quick answers\r\n      if (questionTime < 10000) points += 5;\r\n      // Bonus for not using hints\r\n      if (hintsUsed === 0) points += 3;\r\n    }\r\n\r\n    // Play sound\r\n    if (isTimeUp) {\r\n      soundManager.play('wrong');\r\n    } else if (isCorrect) {\r\n      soundManager.play('correct');\r\n    } else {\r\n      soundManager.play('wrong');\r\n    }\r\n\r\n    // Save detailed result\r\n    const result = {\r\n      question: currentQuestion.question,\r\n      selectedAnswer: selectedOptionIndex,\r\n      correctAnswer: currentQuestion.correctAnswer,\r\n      options: currentQuestion.options,\r\n      isCorrect,\r\n      timeSpent: questionTime,\r\n      points,\r\n      isTimeUp\r\n    };\r\n    \r\n    setDetailedResults(prev => [...prev, result]);\r\n    setSelectedAnswer(selectedOptionIndex);\r\n\r\n    if (isCorrect) {\r\n      setTotalScore(prev => prev + points);\r\n    }\r\n\r\n    // Move to next question or show results\r\n    setTimeout(() => {\r\n      const nextQuestionIndex = currentQuestionIndex + 1;\r\n      \r\n      if (nextQuestionIndex < questionOrder.length) {\r\n        setCurrentQuestionIndex(nextQuestionIndex);\r\n        setSelectedAnswer(null);\r\n        setTimeLeft(getTimeLimit());\r\n        setQuestionStartTime(Date.now());\r\n        setShowHint(false);\r\n        setEliminatedOptions([]);\r\n      } else {\r\n        finishQuiz();\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  // Finish quiz\r\n  const finishQuiz = () => {\r\n    const totalTime = Date.now() - startTime;\r\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\r\n    \r\n    // Save score and stats\r\n    const scoreData = {\r\n      correct: correctAnswers,\r\n      total: questionOrder.length,\r\n      points: totalScore,\r\n      timeSpent: totalTime\r\n    };\r\n    \r\n    saveScore(playerName, scoreData, difficulty, category, totalTime);\r\n    savePlayerStats({\r\n      totalQuestions: questionOrder.length,\r\n      correct: correctAnswers,\r\n      timeSpent: totalTime\r\n    });\r\n    \r\n    // Update leaderboard\r\n    setLeaderboard(getTopScores());\r\n    \r\n    // Play completion sound\r\n    soundManager.play('complete');\r\n    \r\n    setGamePhase('results');\r\n  };\r\n\r\n  // Use hint - 50/50\r\n  const useFiftyFifty = () => {\r\n    if (availableHints <= 0) return;\r\n    \r\n    const currentQuestion = questionOrder[currentQuestionIndex];\r\n    const correctAnswer = currentQuestion.correctAnswer;\r\n    const wrongOptions = [0, 1, 2, 3].filter(i => i !== correctAnswer);\r\n    \r\n    // Randomly select 2 wrong options to eliminate\r\n    const toEliminate = shuffleArray(wrongOptions).slice(0, 2);\r\n    setEliminatedOptions(toEliminate);\r\n    setAvailableHints(prev => prev - 1);\r\n    setHintsUsed(prev => prev + 1);\r\n    \r\n    soundManager.play('hint');\r\n  };\r\n\r\n  // Skip question\r\n  const skipQuestion = () => {\r\n    if (availableHints <= 0) return;\r\n    \r\n    setAvailableHints(prev => prev - 1);\r\n    setHintsUsed(prev => prev + 1);\r\n    handleAnswerSubmit(null, false);\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    saveTheme(newTheme);\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n  };\r\n\r\n  // Toggle sound\r\n  const toggleSound = () => {\r\n    const newMutedState = soundManager.toggleMute();\r\n    setIsMuted(newMutedState);\r\n    saveSoundSettings({ muted: newMutedState, volume: 0.5 });\r\n  };\r\n\r\n  // Restart quiz\r\n  const restartQuiz = () => {\r\n    setGamePhase('setup');\r\n    setCurrentQuestionIndex(0);\r\n    setSelectedAnswer(null);\r\n    setTotalScore(0);\r\n    setShowScore(false);\r\n    setTimeLeft(30);\r\n    setDetailedResults([]);\r\n    setAvailableHints(3);\r\n    setHintsUsed(0);\r\n    setShowHint(false);\r\n    setEliminatedOptions([]);\r\n  };\r\n\r\n  // Get current question\r\n  const currentQuestion = questionOrder[currentQuestionIndex];\r\n\r\n  // Calculate progress percentage\r\n  const progressPercentage = questionOrder.length > 0 ? \r\n    ((currentQuestionIndex) / questionOrder.length) * 100 : 0;\r\n\r\n  // Get score message\r\n  const getScoreMessage = () => {\r\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\r\n    const percentage = Math.round((correctAnswers / questionOrder.length) * 100);\r\n    if (percentage >= 90) return \"Outstanding! 🏆\";\r\n    if (percentage >= 80) return \"Excellent! 🎉\";\r\n    if (percentage >= 70) return \"Great job! 👍\";\r\n    if (percentage >= 60) return \"Good work! 👌\";\r\n    if (percentage >= 50) return \"Not bad! 😊\";\r\n    return \"Keep practicing! 💪\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-app\">\r\n      {/* Header with controls */}\r\n      <div className=\"app-header\">\r\n        <h1 className=\"app-title\">Enhanced Quiz App</h1>\r\n        <div className=\"app-controls\">\r\n          <button className=\"control-btn\" onClick={toggleTheme} title=\"Toggle Theme\">\r\n            {theme === 'light' ? '🌙' : '☀️'}\r\n          </button>\r\n          <button className=\"control-btn\" onClick={toggleSound} title=\"Toggle Sound\">\r\n            {isMuted ? '🔇' : '🔊'}\r\n          </button>\r\n          <button className=\"control-btn\" onClick={() => setShowLeaderboard(!showLeaderboard)} title=\"Leaderboard\">\r\n            🏆\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"quiz-container\">\r\n        {/* Setup Phase */}\r\n        {gamePhase === 'setup' && (\r\n          <div className=\"setup-section\">\r\n            <h2 className=\"setup-title\">Ready to Start?</h2>\r\n            \r\n            <div className=\"setup-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"playerName\">Your Name:</label>\r\n                <input\r\n                  id=\"playerName\"\r\n                  type=\"text\"\r\n                  value={playerName}\r\n                  onChange={(e) => setPlayerName(e.target.value)}\r\n                  placeholder=\"Enter your name\"\r\n                  className=\"name-input\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"difficulty\">Difficulty Level:</label>\r\n                <select\r\n                  id=\"difficulty\"\r\n                  value={difficulty}\r\n                  onChange={(e) => setDifficulty(e.target.value)}\r\n                  className=\"difficulty-select\"\r\n                >\r\n                  <option value=\"easy\">Easy (45s per question)</option>\r\n                  <option value=\"medium\">Medium (30s per question)</option>\r\n                  <option value=\"hard\">Hard (20s per question)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"difficulty-info\">\r\n                <p>Score Multiplier: {getScoreMultiplier()}x</p>\r\n                <p>You'll get 3 hints to help you!</p>\r\n              </div>\r\n\r\n              <button className=\"start-button\" onClick={startQuiz}>\r\n                Start Quiz 🚀\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Playing Phase */}\r\n        {gamePhase === 'playing' && currentQuestion && (\r\n          <>\r\n            {/* Progress Bar */}\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${progressPercentage}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"progress-text\">\r\n                Question {currentQuestionIndex + 1} of {questionOrder.length}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Timer */}\r\n            <div className=\"timer-container\">\r\n              <div className={`timer ${timeLeft <= 10 ? 'timer-warning' : ''}`}>\r\n                ⏰ {timeLeft}s\r\n              </div>\r\n              <div className=\"timer-bar\">\r\n                <div \r\n                  className=\"timer-fill\" \r\n                  style={{ \r\n                    width: `${(timeLeft / getTimeLimit()) * 100}%`,\r\n                    backgroundColor: timeLeft <= 10 ? '#ff4757' : '#2ed573'\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Question Section */}\r\n            <div className=\"question-section\">\r\n              <div className=\"question-header\">\r\n                <div className=\"question-category\">\r\n                  {currentQuestion.category?.toUpperCase()} - {difficulty.toUpperCase()}\r\n                </div>\r\n                <div className=\"current-score\">Score: {totalScore}</div>\r\n              </div>\r\n              \r\n              <div className=\"question-text\">\r\n                {currentQuestion.question}\r\n              </div>\r\n              \r\n              <div className=\"answer-options\">\r\n                {currentQuestion.options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`answer-button ${eliminatedOptions.includes(index) ? 'eliminated' : ''}`}\r\n                    onClick={() => handleAnswerSubmit(index)}\r\n                    disabled={selectedAnswer !== null || eliminatedOptions.includes(index)}\r\n                    style={{\r\n                      backgroundColor: selectedAnswer === index \r\n                        ? (index === currentQuestion.correctAnswer ? '#d4edda' : '#f8d7da')\r\n                        : eliminatedOptions.includes(index) ? '#f1f2f6' : '#ffffff'\r\n                    }}\r\n                  >\r\n                    <span className=\"option-letter\">{String.fromCharCode(65 + index)}</span>\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Hints Section */}\r\n              <div className=\"hints-section\">\r\n                <div className=\"hints-available\">Hints Available: {availableHints}</div>\r\n                <div className=\"hint-buttons\">\r\n                  <button \r\n                    className=\"hint-button\"\r\n                    onClick={useFiftyFifty}\r\n                    disabled={availableHints <= 0 || eliminatedOptions.length > 0}\r\n                    title=\"Remove 2 wrong answers\"\r\n                  >\r\n                    50/50 💡\r\n                  </button>\r\n                  <button \r\n                    className=\"hint-button\"\r\n                    onClick={skipQuestion}\r\n                    disabled={availableHints <= 0}\r\n                    title=\"Skip this question\"\r\n                  >\r\n                    Skip ⏭️\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Results Phase */}\r\n        {gamePhase === 'results' && (\r\n          <div className=\"results-section\">\r\n            <h2 className=\"results-title\">Quiz Complete! 🎉</h2>\r\n            \r\n            <div className=\"score-summary\">\r\n              <div className=\"final-score\">\r\n                <div className=\"score-number\">{totalScore}</div>\r\n                <div className=\"score-label\">Total Points</div>\r\n              </div>\r\n              \r\n              <div className=\"score-stats\">\r\n                <div className=\"stat\">\r\n                  <span className=\"stat-value\">\r\n                    {detailedResults.filter(r => r.isCorrect).length}/{questionOrder.length}\r\n                  </span>\r\n                  <span className=\"stat-label\">Correct</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span className=\"stat-value\">\r\n                    {Math.round((detailedResults.filter(r => r.isCorrect).length / questionOrder.length) * 100)}%\r\n                  </span>\r\n                  <span className=\"stat-label\">Accuracy</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span className=\"stat-value\">{difficulty}</span>\r\n                  <span className=\"stat-label\">Difficulty</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"score-message\">\r\n              {getScoreMessage()}\r\n            </div>\r\n\r\n            {/* Detailed Results */}\r\n            <div className=\"detailed-results\">\r\n              <h3>Question Review</h3>\r\n              {detailedResults.map((result, index) => (\r\n                <div key={index} className={`result-item ${result.isCorrect ? 'correct' : 'incorrect'}`}>\r\n                  <div className=\"result-header\">\r\n                    <span className=\"question-number\">Q{index + 1}</span>\r\n                    <span className={`result-status ${result.isCorrect ? 'correct' : 'incorrect'}`}>\r\n                      {result.isCorrect ? '✅' : '❌'}\r\n                    </span>\r\n                    <span className=\"result-points\">+{result.points} pts</span>\r\n                  </div>\r\n                  <div className=\"result-question\">{result.question}</div>\r\n                  <div className=\"result-answers\">\r\n                    <div className=\"your-answer\">\r\n                      Your answer: {result.selectedAnswer !== null ? result.options[result.selectedAnswer] : 'No answer'}\r\n                    </div>\r\n                    {!result.isCorrect && (\r\n                      <div className=\"correct-answer\">\r\n                        Correct answer: {result.options[result.correctAnswer]}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"result-time\">\r\n                    Time: {Math.round(result.timeSpent / 1000)}s\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"results-actions\">\r\n              <button className=\"action-button primary\" onClick={restartQuiz}>\r\n                Play Again 🔄\r\n              </button>\r\n              <button className=\"action-button secondary\" onClick={() => setShowLeaderboard(true)}>\r\n                View Leaderboard 🏆\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Leaderboard Modal */}\r\n        {showLeaderboard && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowLeaderboard(false)}>\r\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h3>🏆 Leaderboard</h3>\r\n                <button className=\"close-button\" onClick={() => setShowLeaderboard(false)}>×</button>\r\n              </div>\r\n              <div className=\"leaderboard-list\">\r\n                {leaderboard.length === 0 ? (\r\n                  <p>No scores yet. Be the first to play!</p>\r\n                ) : (\r\n                  leaderboard.map((entry, index) => (\r\n                    <div key={entry.id} className=\"leaderboard-entry\">\r\n                      <div className=\"rank\">#{index + 1}</div>\r\n                      <div className=\"player-info\">\r\n                        <div className=\"player-name\">{entry.playerName}</div>\r\n                        <div className=\"player-details\">\r\n                          {entry.score.correct}/{entry.score.total} correct • {entry.difficulty} • {entry.percentage}%\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"player-score\">{entry.score.points} pts</div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}