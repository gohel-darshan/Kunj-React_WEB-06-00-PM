{"ast":null,"code":"import _objectSpread from\"D:/R_W/react/quiz-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Local storage utility for managing quiz data\nexport const STORAGE_KEYS={LEADERBOARD:'quiz_leaderboard',THEME:'quiz_theme',SOUND_SETTINGS:'quiz_sound_settings',PLAYER_STATS:'quiz_player_stats'};// Leaderboard management\nexport const saveScore=(playerName,score,difficulty,category,timeSpent)=>{try{const leaderboard=getLeaderboard();const newEntry={id:Date.now(),playerName:playerName||'Anonymous',score,difficulty,category,timeSpent,date:new Date().toISOString(),percentage:Math.round(score.correct/score.total*100)};leaderboard.push(newEntry);// Sort by score (correct answers) and then by time\nleaderboard.sort((a,b)=>{if(b.score.correct!==a.score.correct){return b.score.correct-a.score.correct;}return a.timeSpent-b.timeSpent;});// Keep only top 50 scores\nconst topScores=leaderboard.slice(0,50);localStorage.setItem(STORAGE_KEYS.LEADERBOARD,JSON.stringify(topScores));return newEntry;}catch(error){console.error('Error saving score:',error);return null;}};export const getLeaderboard=()=>{try{const stored=localStorage.getItem(STORAGE_KEYS.LEADERBOARD);return stored?JSON.parse(stored):[];}catch(error){console.error('Error loading leaderboard:',error);return[];}};export const getTopScores=function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;return getLeaderboard().slice(0,limit);};// Theme management\nexport const saveTheme=theme=>{try{localStorage.setItem(STORAGE_KEYS.THEME,theme);}catch(error){console.error('Error saving theme:',error);}};export const getTheme=()=>{try{return localStorage.getItem(STORAGE_KEYS.THEME)||'light';}catch(error){console.error('Error loading theme:',error);return'light';}};// Sound settings management\nexport const saveSoundSettings=settings=>{try{localStorage.setItem(STORAGE_KEYS.SOUND_SETTINGS,JSON.stringify(settings));}catch(error){console.error('Error saving sound settings:',error);}};export const getSoundSettings=()=>{try{const stored=localStorage.getItem(STORAGE_KEYS.SOUND_SETTINGS);return stored?JSON.parse(stored):{muted:false,volume:0.5};}catch(error){console.error('Error loading sound settings:',error);return{muted:false,volume:0.5};}};// Player statistics\nexport const savePlayerStats=stats=>{try{const currentStats=getPlayerStats();const updatedStats=_objectSpread(_objectSpread({},currentStats),{},{totalQuizzes:(currentStats.totalQuizzes||0)+1,totalQuestions:(currentStats.totalQuestions||0)+stats.totalQuestions,totalCorrect:(currentStats.totalCorrect||0)+stats.correct,totalTime:(currentStats.totalTime||0)+stats.timeSpent,bestScore:Math.max(currentStats.bestScore||0,stats.correct),averageScore:0,// Will be calculated\nlastPlayed:new Date().toISOString()});// Calculate average score\nupdatedStats.averageScore=Math.round(updatedStats.totalCorrect/updatedStats.totalQuestions*100);localStorage.setItem(STORAGE_KEYS.PLAYER_STATS,JSON.stringify(updatedStats));return updatedStats;}catch(error){console.error('Error saving player stats:',error);return null;}};export const getPlayerStats=()=>{try{const stored=localStorage.getItem(STORAGE_KEYS.PLAYER_STATS);return stored?JSON.parse(stored):{totalQuizzes:0,totalQuestions:0,totalCorrect:0,totalTime:0,bestScore:0,averageScore:0,lastPlayed:null};}catch(error){console.error('Error loading player stats:',error);return{totalQuizzes:0,totalQuestions:0,totalCorrect:0,totalTime:0,bestScore:0,averageScore:0,lastPlayed:null};}};// Clear all data\nexport const clearAllData=()=>{try{Object.values(STORAGE_KEYS).forEach(key=>{localStorage.removeItem(key);});return true;}catch(error){console.error('Error clearing data:',error);return false;}};","map":{"version":3,"names":["STORAGE_KEYS","LEADERBOARD","THEME","SOUND_SETTINGS","PLAYER_STATS","saveScore","playerName","score","difficulty","category","timeSpent","leaderboard","getLeaderboard","newEntry","id","Date","now","date","toISOString","percentage","Math","round","correct","total","push","sort","a","b","topScores","slice","localStorage","setItem","JSON","stringify","error","console","stored","getItem","parse","getTopScores","limit","arguments","length","undefined","saveTheme","theme","getTheme","saveSoundSettings","settings","getSoundSettings","muted","volume","savePlayerStats","stats","currentStats","getPlayerStats","updatedStats","_objectSpread","totalQuizzes","totalQuestions","totalCorrect","totalTime","bestScore","max","averageScore","lastPlayed","clearAllData","Object","values","forEach","key","removeItem"],"sources":["D:/R_W/react/quiz-app/src/utils/localStorage.js"],"sourcesContent":["// Local storage utility for managing quiz data\r\nexport const STORAGE_KEYS = {\r\n  LEADERBOARD: 'quiz_leaderboard',\r\n  THEME: 'quiz_theme',\r\n  SOUND_SETTINGS: 'quiz_sound_settings',\r\n  PLAYER_STATS: 'quiz_player_stats'\r\n};\r\n\r\n// Leaderboard management\r\nexport const saveScore = (playerName, score, difficulty, category, timeSpent) => {\r\n  try {\r\n    const leaderboard = getLeaderboard();\r\n    const newEntry = {\r\n      id: Date.now(),\r\n      playerName: playerName || 'Anonymous',\r\n      score,\r\n      difficulty,\r\n      category,\r\n      timeSpent,\r\n      date: new Date().toISOString(),\r\n      percentage: Math.round((score.correct / score.total) * 100)\r\n    };\r\n\r\n    leaderboard.push(newEntry);\r\n    \r\n    // Sort by score (correct answers) and then by time\r\n    leaderboard.sort((a, b) => {\r\n      if (b.score.correct !== a.score.correct) {\r\n        return b.score.correct - a.score.correct;\r\n      }\r\n      return a.timeSpent - b.timeSpent;\r\n    });\r\n\r\n    // Keep only top 50 scores\r\n    const topScores = leaderboard.slice(0, 50);\r\n    localStorage.setItem(STORAGE_KEYS.LEADERBOARD, JSON.stringify(topScores));\r\n    \r\n    return newEntry;\r\n  } catch (error) {\r\n    console.error('Error saving score:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLeaderboard = () => {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEYS.LEADERBOARD);\r\n    return stored ? JSON.parse(stored) : [];\r\n  } catch (error) {\r\n    console.error('Error loading leaderboard:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getTopScores = (limit = 10) => {\r\n  return getLeaderboard().slice(0, limit);\r\n};\r\n\r\n// Theme management\r\nexport const saveTheme = (theme) => {\r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.THEME, theme);\r\n  } catch (error) {\r\n    console.error('Error saving theme:', error);\r\n  }\r\n};\r\n\r\nexport const getTheme = () => {\r\n  try {\r\n    return localStorage.getItem(STORAGE_KEYS.THEME) || 'light';\r\n  } catch (error) {\r\n    console.error('Error loading theme:', error);\r\n    return 'light';\r\n  }\r\n};\r\n\r\n// Sound settings management\r\nexport const saveSoundSettings = (settings) => {\r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.SOUND_SETTINGS, JSON.stringify(settings));\r\n  } catch (error) {\r\n    console.error('Error saving sound settings:', error);\r\n  }\r\n};\r\n\r\nexport const getSoundSettings = () => {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEYS.SOUND_SETTINGS);\r\n    return stored ? JSON.parse(stored) : { muted: false, volume: 0.5 };\r\n  } catch (error) {\r\n    console.error('Error loading sound settings:', error);\r\n    return { muted: false, volume: 0.5 };\r\n  }\r\n};\r\n\r\n// Player statistics\r\nexport const savePlayerStats = (stats) => {\r\n  try {\r\n    const currentStats = getPlayerStats();\r\n    const updatedStats = {\r\n      ...currentStats,\r\n      totalQuizzes: (currentStats.totalQuizzes || 0) + 1,\r\n      totalQuestions: (currentStats.totalQuestions || 0) + stats.totalQuestions,\r\n      totalCorrect: (currentStats.totalCorrect || 0) + stats.correct,\r\n      totalTime: (currentStats.totalTime || 0) + stats.timeSpent,\r\n      bestScore: Math.max(currentStats.bestScore || 0, stats.correct),\r\n      averageScore: 0, // Will be calculated\r\n      lastPlayed: new Date().toISOString()\r\n    };\r\n    \r\n    // Calculate average score\r\n    updatedStats.averageScore = Math.round((updatedStats.totalCorrect / updatedStats.totalQuestions) * 100);\r\n    \r\n    localStorage.setItem(STORAGE_KEYS.PLAYER_STATS, JSON.stringify(updatedStats));\r\n    return updatedStats;\r\n  } catch (error) {\r\n    console.error('Error saving player stats:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getPlayerStats = () => {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEYS.PLAYER_STATS);\r\n    return stored ? JSON.parse(stored) : {\r\n      totalQuizzes: 0,\r\n      totalQuestions: 0,\r\n      totalCorrect: 0,\r\n      totalTime: 0,\r\n      bestScore: 0,\r\n      averageScore: 0,\r\n      lastPlayed: null\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading player stats:', error);\r\n    return {\r\n      totalQuizzes: 0,\r\n      totalQuestions: 0,\r\n      totalCorrect: 0,\r\n      totalTime: 0,\r\n      bestScore: 0,\r\n      averageScore: 0,\r\n      lastPlayed: null\r\n    };\r\n  }\r\n};\r\n\r\n// Clear all data\r\nexport const clearAllData = () => {\r\n  try {\r\n    Object.values(STORAGE_KEYS).forEach(key => {\r\n      localStorage.removeItem(key);\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error clearing data:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"0GAAA;AACA,MAAO,MAAM,CAAAA,YAAY,CAAG,CAC1BC,WAAW,CAAE,kBAAkB,CAC/BC,KAAK,CAAE,YAAY,CACnBC,cAAc,CAAE,qBAAqB,CACrCC,YAAY,CAAE,mBAChB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAACC,UAAU,CAAEC,KAAK,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,GAAK,CAC/E,GAAI,CACF,KAAM,CAAAC,WAAW,CAAGC,cAAc,CAAC,CAAC,CACpC,KAAM,CAAAC,QAAQ,CAAG,CACfC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACdV,UAAU,CAAEA,UAAU,EAAI,WAAW,CACrCC,KAAK,CACLC,UAAU,CACVC,QAAQ,CACRC,SAAS,CACTO,IAAI,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAC9BC,UAAU,CAAEC,IAAI,CAACC,KAAK,CAAEd,KAAK,CAACe,OAAO,CAAGf,KAAK,CAACgB,KAAK,CAAI,GAAG,CAC5D,CAAC,CAEDZ,WAAW,CAACa,IAAI,CAACX,QAAQ,CAAC,CAE1B;AACAF,WAAW,CAACc,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACzB,GAAIA,CAAC,CAACpB,KAAK,CAACe,OAAO,GAAKI,CAAC,CAACnB,KAAK,CAACe,OAAO,CAAE,CACvC,MAAO,CAAAK,CAAC,CAACpB,KAAK,CAACe,OAAO,CAAGI,CAAC,CAACnB,KAAK,CAACe,OAAO,CAC1C,CACA,MAAO,CAAAI,CAAC,CAAChB,SAAS,CAAGiB,CAAC,CAACjB,SAAS,CAClC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAkB,SAAS,CAAGjB,WAAW,CAACkB,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAC1CC,YAAY,CAACC,OAAO,CAAC/B,YAAY,CAACC,WAAW,CAAE+B,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC,CAEzE,MAAO,CAAAf,QAAQ,CACjB,CAAE,MAAOqB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,MAAO,KAAI,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAtB,cAAc,CAAGA,CAAA,GAAM,CAClC,GAAI,CACF,KAAM,CAAAwB,MAAM,CAAGN,YAAY,CAACO,OAAO,CAACrC,YAAY,CAACC,WAAW,CAAC,CAC7D,MAAO,CAAAmC,MAAM,CAAGJ,IAAI,CAACM,KAAK,CAACF,MAAM,CAAC,CAAG,EAAE,CACzC,CAAE,MAAOF,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,EAAE,CACX,CACF,CAAC,CAED,MAAO,MAAM,CAAAK,YAAY,CAAG,QAAAA,CAAA,CAAgB,IAAf,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACrC,MAAO,CAAA7B,cAAc,CAAC,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAEW,KAAK,CAAC,CACzC,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,SAAS,CAAIC,KAAK,EAAK,CAClC,GAAI,CACFf,YAAY,CAACC,OAAO,CAAC/B,YAAY,CAACE,KAAK,CAAE2C,KAAK,CAAC,CACjD,CAAE,MAAOX,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CACF,CAAC,CAED,MAAO,MAAM,CAAAY,QAAQ,CAAGA,CAAA,GAAM,CAC5B,GAAI,CACF,MAAO,CAAAhB,YAAY,CAACO,OAAO,CAACrC,YAAY,CAACE,KAAK,CAAC,EAAI,OAAO,CAC5D,CAAE,MAAOgC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,OAAO,CAChB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAa,iBAAiB,CAAIC,QAAQ,EAAK,CAC7C,GAAI,CACFlB,YAAY,CAACC,OAAO,CAAC/B,YAAY,CAACG,cAAc,CAAE6B,IAAI,CAACC,SAAS,CAACe,QAAQ,CAAC,CAAC,CAC7E,CAAE,MAAOd,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAED,MAAO,MAAM,CAAAe,gBAAgB,CAAGA,CAAA,GAAM,CACpC,GAAI,CACF,KAAM,CAAAb,MAAM,CAAGN,YAAY,CAACO,OAAO,CAACrC,YAAY,CAACG,cAAc,CAAC,CAChE,MAAO,CAAAiC,MAAM,CAAGJ,IAAI,CAACM,KAAK,CAACF,MAAM,CAAC,CAAG,CAAEc,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,GAAI,CAAC,CACpE,CAAE,MAAOjB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,MAAO,CAAEgB,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,GAAI,CAAC,CACtC,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,eAAe,CAAIC,KAAK,EAAK,CACxC,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGC,cAAc,CAAC,CAAC,CACrC,KAAM,CAAAC,YAAY,CAAAC,aAAA,CAAAA,aAAA,IACbH,YAAY,MACfI,YAAY,CAAE,CAACJ,YAAY,CAACI,YAAY,EAAI,CAAC,EAAI,CAAC,CAClDC,cAAc,CAAE,CAACL,YAAY,CAACK,cAAc,EAAI,CAAC,EAAIN,KAAK,CAACM,cAAc,CACzEC,YAAY,CAAE,CAACN,YAAY,CAACM,YAAY,EAAI,CAAC,EAAIP,KAAK,CAAC/B,OAAO,CAC9DuC,SAAS,CAAE,CAACP,YAAY,CAACO,SAAS,EAAI,CAAC,EAAIR,KAAK,CAAC3C,SAAS,CAC1DoD,SAAS,CAAE1C,IAAI,CAAC2C,GAAG,CAACT,YAAY,CAACQ,SAAS,EAAI,CAAC,CAAET,KAAK,CAAC/B,OAAO,CAAC,CAC/D0C,YAAY,CAAE,CAAC,CAAE;AACjBC,UAAU,CAAE,GAAI,CAAAlD,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,EACrC,CAED;AACAsC,YAAY,CAACQ,YAAY,CAAG5C,IAAI,CAACC,KAAK,CAAEmC,YAAY,CAACI,YAAY,CAAGJ,YAAY,CAACG,cAAc,CAAI,GAAG,CAAC,CAEvG7B,YAAY,CAACC,OAAO,CAAC/B,YAAY,CAACI,YAAY,CAAE4B,IAAI,CAACC,SAAS,CAACuB,YAAY,CAAC,CAAC,CAC7E,MAAO,CAAAA,YAAY,CACrB,CAAE,MAAOtB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,KAAI,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAqB,cAAc,CAAGA,CAAA,GAAM,CAClC,GAAI,CACF,KAAM,CAAAnB,MAAM,CAAGN,YAAY,CAACO,OAAO,CAACrC,YAAY,CAACI,YAAY,CAAC,CAC9D,MAAO,CAAAgC,MAAM,CAAGJ,IAAI,CAACM,KAAK,CAACF,MAAM,CAAC,CAAG,CACnCsB,YAAY,CAAE,CAAC,CACfC,cAAc,CAAE,CAAC,CACjBC,YAAY,CAAE,CAAC,CACfC,SAAS,CAAE,CAAC,CACZC,SAAS,CAAE,CAAC,CACZE,YAAY,CAAE,CAAC,CACfC,UAAU,CAAE,IACd,CAAC,CACH,CAAE,MAAO/B,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,MAAO,CACLwB,YAAY,CAAE,CAAC,CACfC,cAAc,CAAE,CAAC,CACjBC,YAAY,CAAE,CAAC,CACfC,SAAS,CAAE,CAAC,CACZC,SAAS,CAAE,CAAC,CACZE,YAAY,CAAE,CAAC,CACfC,UAAU,CAAE,IACd,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CAChC,GAAI,CACFC,MAAM,CAACC,MAAM,CAACpE,YAAY,CAAC,CAACqE,OAAO,CAACC,GAAG,EAAI,CACzCxC,YAAY,CAACyC,UAAU,CAACD,GAAG,CAAC,CAC9B,CAAC,CAAC,CACF,MAAO,KAAI,CACb,CAAE,MAAOpC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,MAAK,CACd,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}