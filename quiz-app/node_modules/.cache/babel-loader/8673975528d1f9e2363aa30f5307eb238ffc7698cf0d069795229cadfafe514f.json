{"ast":null,"code":"var _jsxFileName = \"D:\\\\R_W\\\\react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Quiz questions data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizQuestions = [{\n  question: \"What is the capital of France?\",\n  options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\n  correctAnswer: 2\n}, {\n  question: \"Which planet is known as the Red Planet?\",\n  options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\n  correctAnswer: 1\n}, {\n  question: \"What is 2 + 2?\",\n  options: [\"3\", \"4\", \"5\", \"6\"],\n  correctAnswer: 1\n}, {\n  question: \"Who painted the Mona Lisa?\",\n  options: [\"Vincent van Gogh\", \"Pablo Picasso\", \"Leonardo da Vinci\", \"Michelangelo\"],\n  correctAnswer: 2\n}, {\n  question: \"What is the largest ocean on Earth?\",\n  options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\n  correctAnswer: 3\n}, {\n  question: \"Which programming language is React built with?\",\n  options: [\"Python\", \"JavaScript\", \"Java\", \"C++\"],\n  correctAnswer: 1\n}, {\n  question: \"What year did World War II end?\",\n  options: [\"1944\", \"1945\", \"1946\", \"1947\"],\n  correctAnswer: 1\n}, {\n  question: \"Which element has the chemical symbol 'O'?\",\n  options: [\"Gold\", \"Silver\", \"Oxygen\", \"Iron\"],\n  correctAnswer: 2\n}];\nfunction App() {\n  _s();\n  // useState hooks as specified in requirements\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [totalScore, setTotalScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const currentQuestion = quizQuestions[currentQuestionIndex];\n  const handleAnswerClick = selectedOptionIndex => {\n    setSelectedAnswer(selectedOptionIndex);\n\n    // Check if the answer is correct and update score\n    if (selectedOptionIndex === currentQuestion.correctAnswer) {\n      setTotalScore(totalScore + 1);\n    }\n\n    // Move to next question after a short delay\n    setTimeout(() => {\n      const nextQuestionIndex = currentQuestionIndex + 1;\n      if (nextQuestionIndex < quizQuestions.length) {\n        setCurrentQuestionIndex(nextQuestionIndex);\n        setSelectedAnswer(null);\n      } else {\n        setShowScore(true);\n      }\n    }, 500);\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setTotalScore(0);\n    setShowScore(false);\n  };\n  const getScorePercentage = () => {\n    return Math.round(totalScore / quizQuestions.length * 100);\n  };\n  const getScoreMessage = () => {\n    const percentage = getScorePercentage();\n    if (percentage >= 80) return \"Excellent! 🎉\";\n    if (percentage >= 60) return \"Good job! 👍\";\n    if (percentage >= 40) return \"Not bad! 👌\";\n    return \"Keep practicing! 💪\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"score-title\",\n        children: \"Quiz Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-text\",\n        children: [\"You scored \", totalScore, \" out of \", quizQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-percentage\",\n        children: [getScorePercentage(), \"% - \", getScoreMessage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-button\",\n        onClick: restartQuiz,\n        children: \"Take Quiz Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"quiz-title\",\n          children: \"Quiz App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-progress\",\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", quizQuestions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-options\",\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"answer-button\",\n            onClick: () => handleAnswerClick(index),\n            disabled: selectedAnswer !== null,\n            style: {\n              backgroundColor: selectedAnswer === index ? index === currentQuestion.correctAnswer ? '#d4edda' : '#f8d7da' : '#f8f9fa'\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mATXJ5xRMCLBIOqOtzIyhCagwvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","quizQuestions","question","options","correctAnswer","App","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","totalScore","setTotalScore","showScore","setShowScore","currentQuestion","handleAnswerClick","selectedOptionIndex","setTimeout","nextQuestionIndex","length","restartQuiz","getScorePercentage","Math","round","getScoreMessage","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","option","index","disabled","style","backgroundColor","_c","$RefreshReg$"],"sources":["D:/R_W/react/quiz-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Quiz questions data\r\nconst quizQuestions = [\r\n  {\r\n    question: \"What is the capital of France?\",\r\n    options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\r\n    correctAnswer: 2\r\n  },\r\n  {\r\n    question: \"Which planet is known as the Red Planet?\",\r\n    options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"What is 2 + 2?\",\r\n    options: [\"3\", \"4\", \"5\", \"6\"],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"Who painted the Mona Lisa?\",\r\n    options: [\"Vincent van Gogh\", \"Pablo Picasso\", \"Leonardo da Vinci\", \"Michelangelo\"],\r\n    correctAnswer: 2\r\n  },\r\n  {\r\n    question: \"What is the largest ocean on Earth?\",\r\n    options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\r\n    correctAnswer: 3\r\n  },\r\n  {\r\n    question: \"Which programming language is React built with?\",\r\n    options: [\"Python\", \"JavaScript\", \"Java\", \"C++\"],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"What year did World War II end?\",\r\n    options: [\"1944\", \"1945\", \"1946\", \"1947\"],\r\n    correctAnswer: 1\r\n  },\r\n  {\r\n    question: \"Which element has the chemical symbol 'O'?\",\r\n    options: [\"Gold\", \"Silver\", \"Oxygen\", \"Iron\"],\r\n    correctAnswer: 2\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  // useState hooks as specified in requirements\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  const currentQuestion = quizQuestions[currentQuestionIndex];\r\n\r\n  const handleAnswerClick = (selectedOptionIndex) => {\r\n    setSelectedAnswer(selectedOptionIndex);\r\n\r\n    // Check if the answer is correct and update score\r\n    if (selectedOptionIndex === currentQuestion.correctAnswer) {\r\n      setTotalScore(totalScore + 1);\r\n    }\r\n\r\n    // Move to next question after a short delay\r\n    setTimeout(() => {\r\n      const nextQuestionIndex = currentQuestionIndex + 1;\r\n      \r\n      if (nextQuestionIndex < quizQuestions.length) {\r\n        setCurrentQuestionIndex(nextQuestionIndex);\r\n        setSelectedAnswer(null);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setSelectedAnswer(null);\r\n    setTotalScore(0);\r\n    setShowScore(false);\r\n  };\r\n\r\n  const getScorePercentage = () => {\r\n    return Math.round((totalScore / quizQuestions.length) * 100);\r\n  };\r\n\r\n  const getScoreMessage = () => {\r\n    const percentage = getScorePercentage();\r\n    if (percentage >= 80) return \"Excellent! 🎉\";\r\n    if (percentage >= 60) return \"Good job! 👍\";\r\n    if (percentage >= 40) return \"Not bad! 👌\";\r\n    return \"Keep practicing! 💪\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {showScore ? (\r\n        <div className=\"score-section\">\r\n          <h1 className=\"score-title\">Quiz Complete!</h1>\r\n          <div className=\"score-text\">\r\n            You scored {totalScore} out of {quizQuestions.length}\r\n          </div>\r\n          <div className=\"score-percentage\">\r\n            {getScorePercentage()}% - {getScoreMessage()}\r\n          </div>\r\n          <button className=\"restart-button\" onClick={restartQuiz}>\r\n            Take Quiz Again\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"quiz-header\">\r\n            <h1 className=\"quiz-title\">Quiz App</h1>\r\n            <div className=\"quiz-progress\">\r\n              Question {currentQuestionIndex + 1} of {quizQuestions.length}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"question-section\">\r\n            <div className=\"question-text\">\r\n              {currentQuestion.question}\r\n            </div>\r\n            \r\n            <div className=\"answer-options\">\r\n              {currentQuestion.options.map((option, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"answer-button\"\r\n                  onClick={() => handleAnswerClick(index)}\r\n                  disabled={selectedAnswer !== null}\r\n                  style={{\r\n                    backgroundColor: selectedAnswer === index \r\n                      ? (index === currentQuestion.correctAnswer ? '#d4edda' : '#f8d7da')\r\n                      : '#f8f9fa'\r\n                  }}\r\n                >\r\n                  {option}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}