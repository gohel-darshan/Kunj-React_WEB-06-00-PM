{"ast":null,"code":"// Sound management utility\nclass SoundManager{constructor(){this.sounds={};this.isMuted=false;this.volume=0.5;}// Initialize sound effects\ninitSounds(){// Create audio contexts for different sound effects\nthis.sounds={correct:this.createBeep(800,0.3,'sine'),wrong:this.createBeep(300,0.5,'sawtooth'),tick:this.createBeep(600,0.1,'square'),hint:this.createBeep(1000,0.2,'triangle'),complete:this.createMelody([523,659,784,1047],0.3)};}// Create a beep sound using Web Audio API\ncreateBeep(frequency,duration){let type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'sine';return()=>{if(this.isMuted)return;try{const audioContext=new(window.AudioContext||window.webkitAudioContext)();const oscillator=audioContext.createOscillator();const gainNode=audioContext.createGain();oscillator.connect(gainNode);gainNode.connect(audioContext.destination);oscillator.frequency.value=frequency;oscillator.type=type;gainNode.gain.setValueAtTime(0,audioContext.currentTime);gainNode.gain.linearRampToValueAtTime(this.volume,audioContext.currentTime+0.01);gainNode.gain.exponentialRampToValueAtTime(0.01,audioContext.currentTime+duration);oscillator.start(audioContext.currentTime);oscillator.stop(audioContext.currentTime+duration);}catch(error){console.warn('Audio not supported:',error);}};}// Create a melody for completion sound\ncreateMelody(frequencies,noteDuration){return()=>{if(this.isMuted)return;frequencies.forEach((freq,index)=>{setTimeout(()=>{this.createBeep(freq,noteDuration)();},index*noteDuration*1000);});};}// Play specific sound\nplay(soundName){if(this.sounds[soundName]&&!this.isMuted){this.sounds[soundName]();}}// Toggle mute\ntoggleMute(){this.isMuted=!this.isMuted;return this.isMuted;}// Set volume\nsetVolume(volume){this.volume=Math.max(0,Math.min(1,volume));}// Get mute status\ngetMuteStatus(){return this.isMuted;}}export default new SoundManager();","map":{"version":3,"names":["SoundManager","constructor","sounds","isMuted","volume","initSounds","correct","createBeep","wrong","tick","hint","complete","createMelody","frequency","duration","type","arguments","length","undefined","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","value","gain","setValueAtTime","currentTime","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","error","console","warn","frequencies","noteDuration","forEach","freq","index","setTimeout","play","soundName","toggleMute","setVolume","Math","max","min","getMuteStatus"],"sources":["D:/R_W/react/quiz-app/src/utils/soundManager.js"],"sourcesContent":["// Sound management utility\r\nclass SoundManager {\r\n  constructor() {\r\n    this.sounds = {};\r\n    this.isMuted = false;\r\n    this.volume = 0.5;\r\n  }\r\n\r\n  // Initialize sound effects\r\n  initSounds() {\r\n    // Create audio contexts for different sound effects\r\n    this.sounds = {\r\n      correct: this.createBeep(800, 0.3, 'sine'),\r\n      wrong: this.createBeep(300, 0.5, 'sawtooth'),\r\n      tick: this.createBeep(600, 0.1, 'square'),\r\n      hint: this.createBeep(1000, 0.2, 'triangle'),\r\n      complete: this.createMelody([523, 659, 784, 1047], 0.3)\r\n    };\r\n  }\r\n\r\n  // Create a beep sound using Web Audio API\r\n  createBeep(frequency, duration, type = 'sine') {\r\n    return () => {\r\n      if (this.isMuted) return;\r\n      \r\n      try {\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        const oscillator = audioContext.createOscillator();\r\n        const gainNode = audioContext.createGain();\r\n\r\n        oscillator.connect(gainNode);\r\n        gainNode.connect(audioContext.destination);\r\n\r\n        oscillator.frequency.value = frequency;\r\n        oscillator.type = type;\r\n\r\n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\r\n        gainNode.gain.linearRampToValueAtTime(this.volume, audioContext.currentTime + 0.01);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);\r\n\r\n        oscillator.start(audioContext.currentTime);\r\n        oscillator.stop(audioContext.currentTime + duration);\r\n      } catch (error) {\r\n        console.warn('Audio not supported:', error);\r\n      }\r\n    };\r\n  }\r\n\r\n  // Create a melody for completion sound\r\n  createMelody(frequencies, noteDuration) {\r\n    return () => {\r\n      if (this.isMuted) return;\r\n      \r\n      frequencies.forEach((freq, index) => {\r\n        setTimeout(() => {\r\n          this.createBeep(freq, noteDuration)();\r\n        }, index * noteDuration * 1000);\r\n      });\r\n    };\r\n  }\r\n\r\n  // Play specific sound\r\n  play(soundName) {\r\n    if (this.sounds[soundName] && !this.isMuted) {\r\n      this.sounds[soundName]();\r\n    }\r\n  }\r\n\r\n  // Toggle mute\r\n  toggleMute() {\r\n    this.isMuted = !this.isMuted;\r\n    return this.isMuted;\r\n  }\r\n\r\n  // Set volume\r\n  setVolume(volume) {\r\n    this.volume = Math.max(0, Math.min(1, volume));\r\n  }\r\n\r\n  // Get mute status\r\n  getMuteStatus() {\r\n    return this.isMuted;\r\n  }\r\n}\r\n\r\nexport default new SoundManager();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}