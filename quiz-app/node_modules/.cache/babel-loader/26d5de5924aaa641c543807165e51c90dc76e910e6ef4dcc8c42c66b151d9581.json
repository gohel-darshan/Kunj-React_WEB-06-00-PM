{"ast":null,"code":"// Local storage utility for managing quiz data\nexport const STORAGE_KEYS = {\n  LEADERBOARD: 'quiz_leaderboard',\n  THEME: 'quiz_theme',\n  SOUND_SETTINGS: 'quiz_sound_settings',\n  PLAYER_STATS: 'quiz_player_stats'\n};\n\n// Leaderboard management\nexport const saveScore = (playerName, score, difficulty, category, timeSpent) => {\n  try {\n    const leaderboard = getLeaderboard();\n    const newEntry = {\n      id: Date.now(),\n      playerName: playerName || 'Anonymous',\n      score,\n      difficulty,\n      category,\n      timeSpent,\n      date: new Date().toISOString(),\n      percentage: Math.round(score.correct / score.total * 100)\n    };\n    leaderboard.push(newEntry);\n\n    // Sort by score (correct answers) and then by time\n    leaderboard.sort((a, b) => {\n      if (b.score.correct !== a.score.correct) {\n        return b.score.correct - a.score.correct;\n      }\n      return a.timeSpent - b.timeSpent;\n    });\n\n    // Keep only top 50 scores\n    const topScores = leaderboard.slice(0, 50);\n    localStorage.setItem(STORAGE_KEYS.LEADERBOARD, JSON.stringify(topScores));\n    return newEntry;\n  } catch (error) {\n    console.error('Error saving score:', error);\n    return null;\n  }\n};\nexport const getLeaderboard = () => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEYS.LEADERBOARD);\n    return stored ? JSON.parse(stored) : [];\n  } catch (error) {\n    console.error('Error loading leaderboard:', error);\n    return [];\n  }\n};\nexport const getTopScores = (limit = 10) => {\n  return getLeaderboard().slice(0, limit);\n};\n\n// Theme management\nexport const saveTheme = theme => {\n  try {\n    localStorage.setItem(STORAGE_KEYS.THEME, theme);\n  } catch (error) {\n    console.error('Error saving theme:', error);\n  }\n};\nexport const getTheme = () => {\n  try {\n    return localStorage.getItem(STORAGE_KEYS.THEME) || 'light';\n  } catch (error) {\n    console.error('Error loading theme:', error);\n    return 'light';\n  }\n};\n\n// Sound settings management\nexport const saveSoundSettings = settings => {\n  try {\n    localStorage.setItem(STORAGE_KEYS.SOUND_SETTINGS, JSON.stringify(settings));\n  } catch (error) {\n    console.error('Error saving sound settings:', error);\n  }\n};\nexport const getSoundSettings = () => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEYS.SOUND_SETTINGS);\n    return stored ? JSON.parse(stored) : {\n      muted: false,\n      volume: 0.5\n    };\n  } catch (error) {\n    console.error('Error loading sound settings:', error);\n    return {\n      muted: false,\n      volume: 0.5\n    };\n  }\n};\n\n// Player statistics\nexport const savePlayerStats = stats => {\n  try {\n    const currentStats = getPlayerStats();\n    const updatedStats = {\n      ...currentStats,\n      totalQuizzes: (currentStats.totalQuizzes || 0) + 1,\n      totalQuestions: (currentStats.totalQuestions || 0) + stats.totalQuestions,\n      totalCorrect: (currentStats.totalCorrect || 0) + stats.correct,\n      totalTime: (currentStats.totalTime || 0) + stats.timeSpent,\n      bestScore: Math.max(currentStats.bestScore || 0, stats.correct),\n      averageScore: 0,\n      // Will be calculated\n      lastPlayed: new Date().toISOString()\n    };\n\n    // Calculate average score\n    updatedStats.averageScore = Math.round(updatedStats.totalCorrect / updatedStats.totalQuestions * 100);\n    localStorage.setItem(STORAGE_KEYS.PLAYER_STATS, JSON.stringify(updatedStats));\n    return updatedStats;\n  } catch (error) {\n    console.error('Error saving player stats:', error);\n    return null;\n  }\n};\nexport const getPlayerStats = () => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEYS.PLAYER_STATS);\n    return stored ? JSON.parse(stored) : {\n      totalQuizzes: 0,\n      totalQuestions: 0,\n      totalCorrect: 0,\n      totalTime: 0,\n      bestScore: 0,\n      averageScore: 0,\n      lastPlayed: null\n    };\n  } catch (error) {\n    console.error('Error loading player stats:', error);\n    return {\n      totalQuizzes: 0,\n      totalQuestions: 0,\n      totalCorrect: 0,\n      totalTime: 0,\n      bestScore: 0,\n      averageScore: 0,\n      lastPlayed: null\n    };\n  }\n};\n\n// Clear all data\nexport const clearAllData = () => {\n  try {\n    Object.values(STORAGE_KEYS).forEach(key => {\n      localStorage.removeItem(key);\n    });\n    return true;\n  } catch (error) {\n    console.error('Error clearing data:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["STORAGE_KEYS","LEADERBOARD","THEME","SOUND_SETTINGS","PLAYER_STATS","saveScore","playerName","score","difficulty","category","timeSpent","leaderboard","getLeaderboard","newEntry","id","Date","now","date","toISOString","percentage","Math","round","correct","total","push","sort","a","b","topScores","slice","localStorage","setItem","JSON","stringify","error","console","stored","getItem","parse","getTopScores","limit","saveTheme","theme","getTheme","saveSoundSettings","settings","getSoundSettings","muted","volume","savePlayerStats","stats","currentStats","getPlayerStats","updatedStats","totalQuizzes","totalQuestions","totalCorrect","totalTime","bestScore","max","averageScore","lastPlayed","clearAllData","Object","values","forEach","key","removeItem"],"sources":["D:/R_W/react/quiz-app/src/utils/localStorage.js"],"sourcesContent":["// Local storage utility for managing quiz data\r\nexport const STORAGE_KEYS = {\r\n  LEADERBOARD: 'quiz_leaderboard',\r\n  THEME: 'quiz_theme',\r\n  SOUND_SETTINGS: 'quiz_sound_settings',\r\n  PLAYER_STATS: 'quiz_player_stats'\r\n};\r\n\r\n// Leaderboard management\r\nexport const saveScore = (playerName, score, difficulty, category, timeSpent) => {\r\n  try {\r\n    const leaderboard = getLeaderboard();\r\n    const newEntry = {\r\n      id: Date.now(),\r\n      playerName: playerName || 'Anonymous',\r\n      score,\r\n      difficulty,\r\n      category,\r\n      timeSpent,\r\n      date: new Date().toISOString(),\r\n      percentage: Math.round((score.correct / score.total) * 100)\r\n    };\r\n\r\n    leaderboard.push(newEntry);\r\n    \r\n    // Sort by score (correct answers) and then by time\r\n    leaderboard.sort((a, b) => {\r\n      if (b.score.correct !== a.score.correct) {\r\n        return b.score.correct - a.score.correct;\r\n      }\r\n      return a.timeSpent - b.timeSpent;\r\n    });\r\n\r\n    // Keep only top 50 scores\r\n    const topScores = leaderboard.slice(0, 50);\r\n    localStorage.setItem(STORAGE_KEYS.LEADERBOARD, JSON.stringify(topScores));\r\n    \r\n    return newEntry;\r\n  } catch (error) {\r\n    console.error('Error saving score:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getLeaderboard = () => {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEYS.LEADERBOARD);\r\n    return stored ? JSON.parse(stored) : [];\r\n  } catch (error) {\r\n    console.error('Error loading leaderboard:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getTopScores = (limit = 10) => {\r\n  return getLeaderboard().slice(0, limit);\r\n};\r\n\r\n// Theme management\r\nexport const saveTheme = (theme) => {\r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.THEME, theme);\r\n  } catch (error) {\r\n    console.error('Error saving theme:', error);\r\n  }\r\n};\r\n\r\nexport const getTheme = () => {\r\n  try {\r\n    return localStorage.getItem(STORAGE_KEYS.THEME) || 'light';\r\n  } catch (error) {\r\n    console.error('Error loading theme:', error);\r\n    return 'light';\r\n  }\r\n};\r\n\r\n// Sound settings management\r\nexport const saveSoundSettings = (settings) => {\r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.SOUND_SETTINGS, JSON.stringify(settings));\r\n  } catch (error) {\r\n    console.error('Error saving sound settings:', error);\r\n  }\r\n};\r\n\r\nexport const getSoundSettings = () => {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEYS.SOUND_SETTINGS);\r\n    return stored ? JSON.parse(stored) : { muted: false, volume: 0.5 };\r\n  } catch (error) {\r\n    console.error('Error loading sound settings:', error);\r\n    return { muted: false, volume: 0.5 };\r\n  }\r\n};\r\n\r\n// Player statistics\r\nexport const savePlayerStats = (stats) => {\r\n  try {\r\n    const currentStats = getPlayerStats();\r\n    const updatedStats = {\r\n      ...currentStats,\r\n      totalQuizzes: (currentStats.totalQuizzes || 0) + 1,\r\n      totalQuestions: (currentStats.totalQuestions || 0) + stats.totalQuestions,\r\n      totalCorrect: (currentStats.totalCorrect || 0) + stats.correct,\r\n      totalTime: (currentStats.totalTime || 0) + stats.timeSpent,\r\n      bestScore: Math.max(currentStats.bestScore || 0, stats.correct),\r\n      averageScore: 0, // Will be calculated\r\n      lastPlayed: new Date().toISOString()\r\n    };\r\n    \r\n    // Calculate average score\r\n    updatedStats.averageScore = Math.round((updatedStats.totalCorrect / updatedStats.totalQuestions) * 100);\r\n    \r\n    localStorage.setItem(STORAGE_KEYS.PLAYER_STATS, JSON.stringify(updatedStats));\r\n    return updatedStats;\r\n  } catch (error) {\r\n    console.error('Error saving player stats:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getPlayerStats = () => {\r\n  try {\r\n    const stored = localStorage.getItem(STORAGE_KEYS.PLAYER_STATS);\r\n    return stored ? JSON.parse(stored) : {\r\n      totalQuizzes: 0,\r\n      totalQuestions: 0,\r\n      totalCorrect: 0,\r\n      totalTime: 0,\r\n      bestScore: 0,\r\n      averageScore: 0,\r\n      lastPlayed: null\r\n    };\r\n  } catch (error) {\r\n    console.error('Error loading player stats:', error);\r\n    return {\r\n      totalQuizzes: 0,\r\n      totalQuestions: 0,\r\n      totalCorrect: 0,\r\n      totalTime: 0,\r\n      bestScore: 0,\r\n      averageScore: 0,\r\n      lastPlayed: null\r\n    };\r\n  }\r\n};\r\n\r\n// Clear all data\r\nexport const clearAllData = () => {\r\n  try {\r\n    Object.values(STORAGE_KEYS).forEach(key => {\r\n      localStorage.removeItem(key);\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error clearing data:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}