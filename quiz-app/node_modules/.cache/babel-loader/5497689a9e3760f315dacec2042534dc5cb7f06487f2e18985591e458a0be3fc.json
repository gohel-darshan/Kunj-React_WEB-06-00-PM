{"ast":null,"code":"import _objectSpread from\"D:/R_W/react/quiz-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{questionDatabase,getQuestionsByDifficulty,shuffleArray}from'./data/questions';import soundManager from'./utils/soundManager';import{saveScore,getTopScores,saveTheme,getTheme,saveSoundSettings,getSoundSettings,savePlayerStats}from'./utils/localStorage';import{checkAchievements,getAchievementProgress}from'./utils/achievements';import{PowerUpManager,POWER_UPS}from'./utils/powerUps';import voiceRecognition from'./utils/voiceRecognition';import aiQuestionGenerator from'./utils/aiQuestionGenerator';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _currentQuestion$cate;// Original useState hooks\nconst[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[totalScore,setTotalScore]=useState(0);const[showScore,setShowScore]=useState(false);// Enhanced useState hooks for new features\nconst[timeLeft,setTimeLeft]=useState(30);const[difficulty,setDifficulty]=useState('easy');const[theme,setTheme]=useState('light');const[hintsUsed,setHintsUsed]=useState(0);const[playerName,setPlayerName]=useState('');const[questionOrder,setQuestionOrder]=useState([]);const[detailedResults,setDetailedResults]=useState([]);// Additional state for enhanced features\nconst[gamePhase,setGamePhase]=useState('setup');// setup, playing, results, leaderboard\nconst[availableHints,setAvailableHints]=useState(3);const[showHint,setShowHint]=useState(false);const[eliminatedOptions,setEliminatedOptions]=useState([]);const[leaderboard,setLeaderboard]=useState([]);const[startTime,setStartTime]=useState(null);const[questionStartTime,setQuestionStartTime]=useState(null);const[isMuted,setIsMuted]=useState(false);const[showLeaderboard,setShowLeaderboard]=useState(false);const[category,setCategory]=useState('all');// New advanced features state\nconst[currentStreak,setCurrentStreak]=useState(0);const[longestStreak,setLongestStreak]=useState(0);const[powerUpManager]=useState(new PowerUpManager());const[activePowerUps,setActivePowerUps]=useState(new Map());const[playerCoins,setPlayerCoins]=useState(0);const[achievements,setAchievements]=useState([]);const[bookmarkedQuestions,setBookmarkedQuestions]=useState([]);const[studyMode,setStudyMode]=useState(false);const[voiceEnabled,setVoiceEnabled]=useState(false);const[isListening,setIsListening]=useState(false);const[adaptiveDifficulty,setAdaptiveDifficulty]=useState(false);const[showAchievements,setShowAchievements]=useState(false);const[showPowerUps,setShowPowerUps]=useState(false);const[customTheme,setCustomTheme]=useState(null);const[offlineMode,setOfflineMode]=useState(false);const[socialShare,setSocialShare]=useState(false);const[videoExplanations,setVideoExplanations]=useState(false);const[learningPath,setLearningPath]=useState([]);const[playerLevel,setPlayerLevel]=useState(1);const[playerXP,setPlayerXP]=useState(0);// Initialize app\nuseEffect(()=>{// Load saved settings\nconst savedTheme=getTheme();const soundSettings=getSoundSettings();setTheme(savedTheme);setIsMuted(soundSettings.muted);// Initialize sound manager\nsoundManager.initSounds();soundManager.setVolume(soundSettings.volume);if(soundSettings.muted){soundManager.toggleMute();}// Load leaderboard\nsetLeaderboard(getTopScores());// Apply theme to document\ndocument.documentElement.setAttribute('data-theme',savedTheme);},[]);// Timer effect\nuseEffect(()=>{if(gamePhase==='playing'&&timeLeft>0){const timer=setTimeout(()=>{setTimeLeft(timeLeft-1);if(timeLeft<=10&&timeLeft>0){soundManager.play('tick');}},1000);return()=>clearTimeout(timer);}else if(timeLeft===0&&gamePhase==='playing'){handleTimeUp();}},[timeLeft,gamePhase]);// Get time limit based on difficulty\nconst getTimeLimit=()=>{switch(difficulty){case'easy':return 45;case'medium':return 30;case'hard':return 20;default:return 30;}};// Get score multiplier based on difficulty\nconst getScoreMultiplier=()=>{switch(difficulty){case'easy':return 1;case'medium':return 1.5;case'hard':return 2;default:return 1;}};// Start quiz\nconst startQuiz=()=>{if(!playerName.trim()){alert('Please enter your name!');return;}// Get questions based on difficulty\nconst questions=getQuestionsByDifficulty(difficulty);const shuffledQuestions=shuffleArray(questions).slice(0,10);// Take 10 random questions\nsetQuestionOrder(shuffledQuestions);setGamePhase('playing');setStartTime(Date.now());setQuestionStartTime(Date.now());setTimeLeft(getTimeLimit());setCurrentQuestionIndex(0);setTotalScore(0);setSelectedAnswer(null);setDetailedResults([]);setAvailableHints(3);setHintsUsed(0);setShowHint(false);setEliminatedOptions([]);};// Handle time up\nconst handleTimeUp=()=>{handleAnswerSubmit(null,true);};// Handle answer submission\nconst handleAnswerSubmit=function(selectedOptionIndex){let isTimeUp=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const currentQuestion=questionOrder[currentQuestionIndex];const questionTime=Date.now()-questionStartTime;const isCorrect=selectedOptionIndex===currentQuestion.correctAnswer;// Update streak\nupdateStreak(isCorrect);// Apply power-up effects\nconst powerUpEffects=powerUpManager.applyEffects();// Calculate points with power-ups\nlet points=0;if(isCorrect&&!isTimeUp){points=Math.round(10*getScoreMultiplier()*powerUpEffects.pointsMultiplier);// Bonus for quick answers\nif(questionTime<10000)points+=5;// Bonus for not using hints\nif(hintsUsed===0)points+=3;// Streak bonus\nif(currentStreak>=3)points+=currentStreak;}// Calculate XP gain\nconst xpGain=calculateXPGain(isCorrect,difficulty,questionTime<10000?5:0,currentStreak);updatePlayerLevel(playerXP+xpGain);// Calculate coins earned\nconst coinsEarned=PowerUpManager.calculateCoinsEarned(isCorrect?1:0,difficulty,currentStreak,questionTime<10000?5:0);powerUpManager.addCoins(coinsEarned);setPlayerCoins(powerUpManager.getState().coins);// Play sound\nif(isTimeUp){soundManager.play('wrong');}else if(isCorrect){soundManager.play('correct');}else{soundManager.play('wrong');}// Save detailed result\nconst result={question:currentQuestion.question,selectedAnswer:selectedOptionIndex,correctAnswer:currentQuestion.correctAnswer,options:currentQuestion.options,isCorrect,timeSpent:questionTime,points,xpGained:xpGain,coinsEarned,streakAtTime:currentStreak,isTimeUp,powerUpsActive:Array.from(activePowerUps.keys())};setDetailedResults(prev=>[...prev,result]);setSelectedAnswer(selectedOptionIndex);if(isCorrect){setTotalScore(prev=>prev+points);}// Update power-up durations\npowerUpManager.updateDurations();setActivePowerUps(new Map(powerUpManager.activePowerUps));// Check for adaptive difficulty adjustment\nadjustDifficultyBasedOnPerformance();// Move to next question or show results\nsetTimeout(()=>{const nextQuestionIndex=currentQuestionIndex+1;if(nextQuestionIndex<questionOrder.length){setCurrentQuestionIndex(nextQuestionIndex);setSelectedAnswer(null);setTimeLeft(studyMode?999:getTimeLimit());setQuestionStartTime(Date.now());setShowHint(false);setEliminatedOptions([]);}else{finishQuiz();}},1500);};// Finish quiz\nconst finishQuiz=()=>{const totalTime=Date.now()-startTime;const correctAnswers=detailedResults.filter(r=>r.isCorrect).length;const percentage=Math.round(correctAnswers/questionOrder.length*100);// Save score and stats\nconst scoreData={correct:correctAnswers,total:questionOrder.length,points:totalScore,timeSpent:totalTime};saveScore(playerName,scoreData,difficulty,category,totalTime);// Enhanced stats for achievements\nconst enhancedStats={totalQuestions:questionOrder.length,correct:correctAnswers,timeSpent:totalTime,percentage,difficulty,longestStreak,hintsUsed,powerUpsUsed:Array.from(activePowerUps.keys()).length,perfectScore:percentage===100,noHintsUsed:hintsUsed===0};savePlayerStats(enhancedStats);// Check for new achievements\nconst currentStats={totalQuizzes:1,// This would be loaded from storage in real implementation\nbestPercentage:percentage,longestStreak,achievements:achievements,categoryStats:{[category]:{percentage}}};checkAndUnlockAchievements(currentStats);// Update leaderboard\nsetLeaderboard(getTopScores());// Play completion sound\nsoundManager.play('complete');setGamePhase('results');};// Use hint - 50/50\nconst useFiftyFifty=()=>{if(availableHints<=0)return;const currentQuestion=questionOrder[currentQuestionIndex];const correctAnswer=currentQuestion.correctAnswer;const wrongOptions=[0,1,2,3].filter(i=>i!==correctAnswer);// Randomly select 2 wrong options to eliminate\nconst toEliminate=shuffleArray(wrongOptions).slice(0,2);setEliminatedOptions(toEliminate);setAvailableHints(prev=>prev-1);setHintsUsed(prev=>prev+1);soundManager.play('hint');};// Skip question\nconst skipQuestion=()=>{if(availableHints<=0)return;setAvailableHints(prev=>prev-1);setHintsUsed(prev=>prev+1);handleAnswerSubmit(null,false);};// Toggle theme\nconst toggleTheme=()=>{const newTheme=theme==='light'?'dark':'light';setTheme(newTheme);saveTheme(newTheme);document.documentElement.setAttribute('data-theme',newTheme);};// Toggle sound\nconst toggleSound=()=>{const newMutedState=soundManager.toggleMute();setIsMuted(newMutedState);saveSoundSettings({muted:newMutedState,volume:0.5});};// Restart quiz\nconst restartQuiz=()=>{setGamePhase('setup');setCurrentQuestionIndex(0);setSelectedAnswer(null);setTotalScore(0);setShowScore(false);setTimeLeft(30);setDetailedResults([]);setAvailableHints(3);setHintsUsed(0);setShowHint(false);setEliminatedOptions([]);};// Get current question\nconst currentQuestion=questionOrder[currentQuestionIndex];// Calculate progress percentage\nconst progressPercentage=questionOrder.length>0?currentQuestionIndex/questionOrder.length*100:0;// Get score message\nconst getScoreMessage=()=>{const correctAnswers=detailedResults.filter(r=>r.isCorrect).length;const percentage=Math.round(correctAnswers/questionOrder.length*100);if(percentage>=90)return\"Outstanding! 🏆\";if(percentage>=80)return\"Excellent! 🎉\";if(percentage>=70)return\"Great job! 👍\";if(percentage>=60)return\"Good work! 👌\";if(percentage>=50)return\"Not bad! 😊\";return\"Keep practicing! 💪\";};// New feature functions\n// Streak management\nconst updateStreak=isCorrect=>{if(isCorrect){const newStreak=currentStreak+1;setCurrentStreak(newStreak);if(newStreak>longestStreak){setLongestStreak(newStreak);}}else{setCurrentStreak(0);}};// Power-up functions\nconst purchasePowerUp=powerUpId=>{const result=powerUpManager.purchasePowerUp(powerUpId);if(result.success){setPlayerCoins(powerUpManager.getState().coins);if(result.effect){// Apply instant effect\napplyPowerUpEffect(result.effect);}}return result;};const activatePowerUp=powerUpId=>{const result=powerUpManager.activatePowerUp(powerUpId);if(result.success){setActivePowerUps(new Map(powerUpManager.activePowerUps));}return result;};const applyPowerUpEffect=effect=>{switch(effect.effect){case'extra_hints':setAvailableHints(prev=>prev+effect.value);break;case'time_bonus':setTimeLeft(prev=>prev+effect.value);break;case'time_freeze':// Implement time freeze logic\nbreak;default:break;}};// Achievement system\nconst checkAndUnlockAchievements=stats=>{const newAchievements=checkAchievements(stats);if(newAchievements.length>0){setAchievements(prev=>[...prev,...newAchievements.map(a=>a.id)]);// Show achievement notification\nnewAchievements.forEach(achievement=>{showAchievementNotification(achievement);});}};const showAchievementNotification=achievement=>{// Create achievement notification\nconst notification=document.createElement('div');notification.className='achievement-notification';notification.innerHTML=\"\\n      <div class=\\\"achievement-content\\\">\\n        <span class=\\\"achievement-icon\\\">\".concat(achievement.icon,\"</span>\\n        <div class=\\\"achievement-text\\\">\\n          <div class=\\\"achievement-name\\\">\").concat(achievement.name,\"</div>\\n          <div class=\\\"achievement-description\\\">\").concat(achievement.description,\"</div>\\n        </div>\\n      </div>\\n    \");document.body.appendChild(notification);// Remove after animation\nsetTimeout(()=>{if(notification.parentNode){notification.parentNode.removeChild(notification);}},4000);};// Voice recognition functions\nconst toggleVoiceRecognition=()=>{if(!voiceRecognition.isVoiceSupported()){alert('Voice recognition is not supported in your browser');return;}if(isListening){voiceRecognition.stopListening();setIsListening(false);}else{startVoiceListening();}};const startVoiceListening=()=>{if(!currentQuestion)return;setIsListening(true);voiceRecognition.startListening(currentQuestion.options,result=>{setIsListening(false);if(result.success&&result.matchedOption){if(result.matchedOption.action){// Handle voice commands\nhandleVoiceCommand(result.matchedOption.action);}else if(typeof result.matchedOption.index==='number'){// Handle answer selection\nhandleAnswerSubmit(result.matchedOption.index);}}});};const handleVoiceCommand=command=>{switch(command){case'skip':skipQuestion();break;case'hint':case'fiftyFifty':useFiftyFifty();break;case'help':speakInstructions();break;case'pause':// Implement pause functionality\nbreak;case'stop':voiceRecognition.stopListening();setIsListening(false);break;default:break;}};const speakInstructions=()=>{if('speechSynthesis'in window){const utterance=new SpeechSynthesisUtterance('You can say A, B, C, or D to select an answer. Say skip to skip the question, or hint for help.');speechSynthesis.speak(utterance);}};// Bookmark functions\nconst toggleBookmark=question=>{setBookmarkedQuestions(prev=>{const isBookmarked=prev.some(q=>q.question===question.question);if(isBookmarked){return prev.filter(q=>q.question!==question.question);}else{return[...prev,_objectSpread(_objectSpread({},question),{},{bookmarkedAt:Date.now()})];}});};const isQuestionBookmarked=question=>{return bookmarkedQuestions.some(q=>q.question===question.question);};// Study mode functions\nconst toggleStudyMode=()=>{setStudyMode(!studyMode);if(!studyMode){// Entering study mode - no time pressure\nsetTimeLeft(999);}};// Adaptive difficulty\nconst adjustDifficultyBasedOnPerformance=()=>{if(!adaptiveDifficulty)return;const recentPerformance=detailedResults.slice(-5);// Last 5 questions\nconst recentAccuracy=recentPerformance.filter(r=>r.isCorrect).length/recentPerformance.length;if(recentAccuracy>=0.8&&difficulty==='easy'){setDifficulty('medium');}else if(recentAccuracy>=0.8&&difficulty==='medium'){setDifficulty('hard');}else if(recentAccuracy<=0.4&&difficulty==='hard'){setDifficulty('medium');}else if(recentAccuracy<=0.4&&difficulty==='medium'){setDifficulty('easy');}};// XP and leveling system\nconst calculateXPGain=(isCorrect,difficulty,timeBonus,streak)=>{let xp=0;if(isCorrect){xp=10;// Base XP\nconst difficultyMultiplier={easy:1,medium:1.5,hard:2};xp*=difficultyMultiplier[difficulty]||1;// Time bonus\nif(timeBonus>0)xp+=Math.floor(timeBonus/5);// Streak bonus\nif(streak>=3)xp+=streak*2;}return Math.floor(xp);};const updatePlayerLevel=newXP=>{const xpForNextLevel=playerLevel*100;// 100 XP per level\nif(newXP>=xpForNextLevel){setPlayerLevel(prev=>prev+1);setPlayerXP(newXP-xpForNextLevel);// Show level up notification\nshowLevelUpNotification(playerLevel+1);}else{setPlayerXP(newXP);}};const showLevelUpNotification=newLevel=>{const notification=document.createElement('div');notification.className='level-up-notification';notification.innerHTML=\"\\n      <div class=\\\"level-up-content\\\">\\n        <span class=\\\"level-up-icon\\\">\\uD83C\\uDF89</span>\\n        <div class=\\\"level-up-text\\\">\\n          <div class=\\\"level-up-title\\\">Level Up!</div>\\n          <div class=\\\"level-up-level\\\">Level \".concat(newLevel,\"</div>\\n        </div>\\n      </div>\\n    \");document.body.appendChild(notification);setTimeout(()=>{if(notification.parentNode){notification.parentNode.removeChild(notification);}},3000);};// Social sharing\nconst shareScore=platform=>{const correctAnswers=detailedResults.filter(r=>r.isCorrect).length;const percentage=Math.round(correctAnswers/questionOrder.length*100);const text=\"I just scored \".concat(percentage,\"% on the Enhanced Quiz App! \\uD83C\\uDFAF Can you beat my score?\");const url=window.location.href;switch(platform){case'twitter':window.open(\"https://twitter.com/intent/tweet?text=\".concat(encodeURIComponent(text),\"&url=\").concat(encodeURIComponent(url)));break;case'facebook':window.open(\"https://www.facebook.com/sharer/sharer.php?u=\".concat(encodeURIComponent(url),\"&quote=\").concat(encodeURIComponent(text)));break;case'linkedin':window.open(\"https://www.linkedin.com/sharing/share-offsite/?url=\".concat(encodeURIComponent(url)));break;case'whatsapp':window.open(\"https://wa.me/?text=\".concat(encodeURIComponent(text+' '+url)));break;default:// Copy to clipboard\nnavigator.clipboard.writeText(text+' '+url);alert('Score copied to clipboard!');break;}};// Export results as PDF (mock implementation)\nconst exportResultsToPDF=()=>{// This would integrate with a PDF library like jsPDF\nalert('PDF export feature would be implemented with jsPDF library');};// Generate AI questions\nconst generateAIQuestions=async()=>{try{const aiQuestions=await aiQuestionGenerator.generateQuestions(category,difficulty,5);setQuestionOrder(prev=>[...prev,...aiQuestions]);}catch(error){console.error('Failed to generate AI questions:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"Enhanced Quiz App\"}),gamePhase==='playing'&&/*#__PURE__*/_jsxs(\"div\",{className:\"player-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83D\\uDD25\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:currentStreak})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\uD83E\\uDE99\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:playerCoins})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[\"Lv.\",playerLevel]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"control-btn\",onClick:toggleTheme,title:\"Toggle Theme\",children:theme==='light'?'🌙':'☀️'}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn\",onClick:toggleSound,title:\"Toggle Sound\",children:isMuted?'🔇':'🔊'}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn\",onClick:toggleVoiceRecognition,title:\"Voice Commands\",style:{backgroundColor:isListening?'#ff4757':''},children:isListening?'🎤':'🗣️'}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn\",onClick:()=>setShowAchievements(!showAchievements),title:\"Achievements\",children:\"\\uD83C\\uDFC5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn\",onClick:()=>setShowPowerUps(!showPowerUps),title:\"Power-ups\",children:\"\\u26A1\"}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn\",onClick:()=>setShowLeaderboard(!showLeaderboard),title:\"Leaderboard\",children:\"\\uD83C\\uDFC6\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[gamePhase==='setup'&&/*#__PURE__*/_jsxs(\"div\",{className:\"setup-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"setup-title\",children:\"Ready to Start?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"setup-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerName\",children:\"Your Name:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"playerName\",type:\"text\",value:playerName,onChange:e=>setPlayerName(e.target.value),placeholder:\"Enter your name\",className:\"name-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"difficulty\",children:\"Difficulty Level:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"difficulty\",value:difficulty,onChange:e=>setDifficulty(e.target.value),className:\"difficulty-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"Easy (45s per question)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium (30s per question)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"Hard (20s per question)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category\",children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category\",value:category,onChange:e=>setCategory(e.target.value),className:\"category-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Categories\"}),/*#__PURE__*/_jsx(\"option\",{value:\"science\",children:\"Science\"}),/*#__PURE__*/_jsx(\"option\",{value:\"history\",children:\"History\"}),/*#__PURE__*/_jsx(\"option\",{value:\"geography\",children:\"Geography\"}),/*#__PURE__*/_jsx(\"option\",{value:\"technology\",children:\"Technology\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sports\",children:\"Sports\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-modes\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Game Modes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mode-options\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"mode-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:studyMode,onChange:e=>setStudyMode(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"mode-label\",children:\"Study Mode (No Timer)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"mode-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:adaptiveDifficulty,onChange:e=>setAdaptiveDifficulty(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"mode-label\",children:\"Adaptive Difficulty\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"mode-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:voiceEnabled,onChange:e=>setVoiceEnabled(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"mode-label\",children:\"Voice Commands\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"difficulty-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Score Multiplier: \",getScoreMultiplier(),\"x\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"You'll get 3 hints to help you!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Coins: \",playerCoins,\" | Level: \",playerLevel]}),studyMode&&/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F0 Study Mode: No time pressure!\"}),adaptiveDifficulty&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83E\\uDDE0 Adaptive: Difficulty adjusts to your performance\"}),voiceEnabled&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDDE3\\uFE0F Voice: Answer using voice commands\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"start-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"start-button primary\",onClick:startQuiz,children:\"Start Quiz \\uD83D\\uDE80\"}),/*#__PURE__*/_jsx(\"button\",{className:\"start-button secondary\",onClick:generateAIQuestions,children:\"Generate AI Questions \\uD83E\\uDD16\"})]})]})]}),gamePhase==='playing'&&currentQuestion&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(progressPercentage,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-text\",children:[\"Question \",currentQuestionIndex+1,\" of \",questionOrder.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer \".concat(timeLeft<=10?'timer-warning':''),children:[\"\\u23F0 \",timeLeft,\"s\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"timer-fill\",style:{width:\"\".concat(timeLeft/getTimeLimit()*100,\"%\"),backgroundColor:timeLeft<=10?'#ff4757':'#2ed573'}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-category\",children:[(_currentQuestion$cate=currentQuestion.category)===null||_currentQuestion$cate===void 0?void 0:_currentQuestion$cate.toUpperCase(),\" - \",difficulty.toUpperCase()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-score\",children:[\"Score: \",totalScore]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:currentQuestion.question}),/*#__PURE__*/_jsx(\"div\",{className:\"answer-options\",children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsxs(\"button\",{className:\"answer-button \".concat(eliminatedOptions.includes(index)?'eliminated':''),onClick:()=>handleAnswerSubmit(index),disabled:selectedAnswer!==null||eliminatedOptions.includes(index),style:{backgroundColor:selectedAnswer===index?index===currentQuestion.correctAnswer?'#d4edda':'#f8d7da':eliminatedOptions.includes(index)?'#f1f2f6':'#ffffff'},children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-letter\",children:String.fromCharCode(65+index)}),option]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"hints-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hints-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hints-available\",children:[\"Hints: \",availableHints]}),/*#__PURE__*/_jsxs(\"div\",{className:\"streak-display\",children:[\"Streak: \",currentStreak,\" \\uD83D\\uDD25\"]}),isQuestionBookmarked(currentQuestion)&&/*#__PURE__*/_jsx(\"div\",{className:\"bookmark-indicator\",children:\"\\uD83D\\uDCD6 Bookmarked\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"hint-button\",onClick:useFiftyFifty,disabled:availableHints<=0||eliminatedOptions.length>0,title:\"Remove 2 wrong answers\",children:\"50/50 \\uD83D\\uDCA1\"}),/*#__PURE__*/_jsx(\"button\",{className:\"hint-button\",onClick:skipQuestion,disabled:availableHints<=0,title:\"Skip this question\",children:\"Skip \\u23ED\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"hint-button bookmark-btn\",onClick:()=>toggleBookmark(currentQuestion),title:\"Bookmark this question\",children:isQuestionBookmarked(currentQuestion)?'📖':'📝'}),voiceEnabled&&/*#__PURE__*/_jsx(\"button\",{className:\"hint-button voice-btn \".concat(isListening?'listening':''),onClick:toggleVoiceRecognition,title:\"Voice answer\",children:isListening?'🎤':'🗣️'})]}),activePowerUps.size>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"active-powerups\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"powerups-title\",children:\"Active Power-ups:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"powerups-list\",children:Array.from(activePowerUps.entries()).map(_ref=>{let[id,powerUp]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"active-powerup\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"powerup-icon\",children:powerUp.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"powerup-name\",children:powerUp.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"powerup-duration\",children:[\"(\",powerUp.remainingDuration,\")\"]})]},id);})})]}),isListening&&/*#__PURE__*/_jsxs(\"div\",{className:\"voice-status\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"voice-indicator\",children:\"\\uD83C\\uDFA4 Listening...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"voice-help\",children:\"Say A, B, C, D or \\\"hint\\\", \\\"skip\\\"\"})]})]})]})]}),gamePhase==='results'&&/*#__PURE__*/_jsxs(\"div\",{className:\"results-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"results-title\",children:\"Quiz Complete! \\uD83C\\uDF89\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"final-score\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"score-number\",children:totalScore}),/*#__PURE__*/_jsx(\"div\",{className:\"score-label\",children:\"Total Points\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[detailedResults.filter(r=>r.isCorrect).length,\"/\",questionOrder.length]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Correct\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.round(detailedResults.filter(r=>r.isCorrect).length/questionOrder.length*100),\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Accuracy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:difficulty}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Difficulty\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-message\",children:getScoreMessage()}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailed-results\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Question Review\"}),detailedResults.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"result-item \".concat(result.isCorrect?'correct':'incorrect'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"question-number\",children:[\"Q\",index+1]}),/*#__PURE__*/_jsx(\"span\",{className:\"result-status \".concat(result.isCorrect?'correct':'incorrect'),children:result.isCorrect?'✅':'❌'}),/*#__PURE__*/_jsxs(\"span\",{className:\"result-points\",children:[\"+\",result.points,\" pts\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-question\",children:result.question}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-answers\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"your-answer\",children:[\"Your answer: \",result.selectedAnswer!==null?result.options[result.selectedAnswer]:'No answer']}),!result.isCorrect&&/*#__PURE__*/_jsxs(\"div\",{className:\"correct-answer\",children:[\"Correct answer: \",result.options[result.correctAnswer]]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-time\",children:[\"Time: \",Math.round(result.timeSpent/1000),\"s\"]})]},index))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-actions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"primary-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-button primary\",onClick:restartQuiz,children:\"Play Again \\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button secondary\",onClick:()=>setShowLeaderboard(true),children:\"View Leaderboard \\uD83C\\uDFC6\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"secondary-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-button tertiary\",onClick:()=>setShowAchievements(true),children:\"Achievements \\uD83C\\uDFC5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button tertiary\",onClick:exportResultsToPDF,children:\"Export PDF \\uD83D\\uDCC4\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-button tertiary\",onClick:()=>setSocialShare(true),children:\"Share Score \\uD83D\\uDCF1\"})]}),socialShare&&/*#__PURE__*/_jsxs(\"div\",{className:\"social-share\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Share Your Score\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"share-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>shareScore('twitter'),className:\"share-btn twitter\",children:\"\\uD83D\\uDC26 Twitter\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>shareScore('facebook'),className:\"share-btn facebook\",children:\"\\uD83D\\uDCD8 Facebook\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>shareScore('linkedin'),className:\"share-btn linkedin\",children:\"\\uD83D\\uDCBC LinkedIn\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>shareScore('whatsapp'),className:\"share-btn whatsapp\",children:\"\\uD83D\\uDCAC WhatsApp\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>shareScore('copy'),className:\"share-btn copy\",children:\"\\uD83D\\uDCCB Copy Link\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSocialShare(false),className:\"close-share\",children:\"\\u2715 Close\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"level-progress\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"level-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Level \",playerLevel]}),/*#__PURE__*/_jsxs(\"span\",{children:[playerXP,\" / \",playerLevel*100,\" XP\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"xp-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"xp-fill\",style:{width:\"\".concat(playerXP/(playerLevel*100)*100,\"%\")}})})]})]})]}),showLeaderboard&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowLeaderboard(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFC6 Leaderboard\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowLeaderboard(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"leaderboard-list\",children:leaderboard.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No scores yet. Be the first to play!\"}):leaderboard.map((entry,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"leaderboard-entry\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rank\",children:[\"#\",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"player-name\",children:entry.playerName}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-details\",children:[entry.score.correct,\"/\",entry.score.total,\" correct \\u2022 \",entry.difficulty,\" \\u2022 \",entry.percentage,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-score\",children:[entry.score.points,\" pts\"]})]},entry.id))})]})}),showAchievements&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowAchievements(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content achievements-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFC5 Achievements\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowAchievements(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"achievements-grid\",children:Object.values(getAchievementProgress({})).map(achievement=>/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-card \".concat(achievement.unlocked?'unlocked':'locked'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"achievement-icon\",children:achievement.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"achievement-name\",children:achievement.name}),/*#__PURE__*/_jsx(\"div\",{className:\"achievement-description\",children:achievement.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(achievement.progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"progress-text\",children:[Math.round(achievement.progress),\"%\"]})]})]})]},achievement.id))})]})}),showPowerUps&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowPowerUps(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content powerups-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u26A1 Power-ups Shop\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coins-display\",children:[\"\\uD83E\\uDE99 \",playerCoins,\" coins\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowPowerUps(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"powerups-grid\",children:Object.values(POWER_UPS).map(powerUp=>/*#__PURE__*/_jsxs(\"div\",{className:\"powerup-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"powerup-icon\",children:powerUp.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"powerup-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"powerup-name\",children:powerUp.name}),/*#__PURE__*/_jsx(\"div\",{className:\"powerup-description\",children:powerUp.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"powerup-cost\",children:[\"\\uD83D\\uDCB0 \",powerUp.cost,\" coins\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"powerup-buy-btn\",onClick:()=>purchasePowerUp(powerUp.id),disabled:playerCoins<powerUp.cost,children:playerCoins>=powerUp.cost?'Buy':'Not enough coins'})]},powerUp.id))})]})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","questionDatabase","getQuestionsByDifficulty","shuffleArray","soundManager","saveScore","getTopScores","saveTheme","getTheme","saveSoundSettings","getSoundSettings","savePlayerStats","checkAchievements","getAchievementProgress","PowerUpManager","POWER_UPS","voiceRecognition","aiQuestionGenerator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_currentQuestion$cate","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","totalScore","setTotalScore","showScore","setShowScore","timeLeft","setTimeLeft","difficulty","setDifficulty","theme","setTheme","hintsUsed","setHintsUsed","playerName","setPlayerName","questionOrder","setQuestionOrder","detailedResults","setDetailedResults","gamePhase","setGamePhase","availableHints","setAvailableHints","showHint","setShowHint","eliminatedOptions","setEliminatedOptions","leaderboard","setLeaderboard","startTime","setStartTime","questionStartTime","setQuestionStartTime","isMuted","setIsMuted","showLeaderboard","setShowLeaderboard","category","setCategory","currentStreak","setCurrentStreak","longestStreak","setLongestStreak","powerUpManager","activePowerUps","setActivePowerUps","Map","playerCoins","setPlayerCoins","achievements","setAchievements","bookmarkedQuestions","setBookmarkedQuestions","studyMode","setStudyMode","voiceEnabled","setVoiceEnabled","isListening","setIsListening","adaptiveDifficulty","setAdaptiveDifficulty","showAchievements","setShowAchievements","showPowerUps","setShowPowerUps","customTheme","setCustomTheme","offlineMode","setOfflineMode","socialShare","setSocialShare","videoExplanations","setVideoExplanations","learningPath","setLearningPath","playerLevel","setPlayerLevel","playerXP","setPlayerXP","savedTheme","soundSettings","muted","initSounds","setVolume","volume","toggleMute","document","documentElement","setAttribute","timer","setTimeout","play","clearTimeout","handleTimeUp","getTimeLimit","getScoreMultiplier","startQuiz","trim","alert","questions","shuffledQuestions","slice","Date","now","handleAnswerSubmit","selectedOptionIndex","isTimeUp","arguments","length","undefined","currentQuestion","questionTime","isCorrect","correctAnswer","updateStreak","powerUpEffects","applyEffects","points","Math","round","pointsMultiplier","xpGain","calculateXPGain","updatePlayerLevel","coinsEarned","calculateCoinsEarned","addCoins","getState","coins","result","question","options","timeSpent","xpGained","streakAtTime","powerUpsActive","Array","from","keys","prev","updateDurations","adjustDifficultyBasedOnPerformance","nextQuestionIndex","finishQuiz","totalTime","correctAnswers","filter","r","percentage","scoreData","correct","total","enhancedStats","totalQuestions","powerUpsUsed","perfectScore","noHintsUsed","currentStats","totalQuizzes","bestPercentage","categoryStats","checkAndUnlockAchievements","useFiftyFifty","wrongOptions","i","toEliminate","skipQuestion","toggleTheme","newTheme","toggleSound","newMutedState","restartQuiz","progressPercentage","getScoreMessage","newStreak","purchasePowerUp","powerUpId","success","effect","applyPowerUpEffect","activatePowerUp","value","stats","newAchievements","map","a","id","forEach","achievement","showAchievementNotification","notification","createElement","className","innerHTML","concat","icon","name","description","body","appendChild","parentNode","removeChild","toggleVoiceRecognition","isVoiceSupported","stopListening","startVoiceListening","startListening","matchedOption","action","handleVoiceCommand","index","command","speakInstructions","window","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","toggleBookmark","isBookmarked","some","q","_objectSpread","bookmarkedAt","isQuestionBookmarked","toggleStudyMode","recentPerformance","recentAccuracy","timeBonus","streak","xp","difficultyMultiplier","easy","medium","hard","floor","newXP","xpForNextLevel","showLevelUpNotification","newLevel","shareScore","platform","text","url","location","href","open","encodeURIComponent","navigator","clipboard","writeText","exportResultsToPDF","generateAIQuestions","aiQuestions","generateQuestions","error","console","children","onClick","title","style","backgroundColor","htmlFor","type","onChange","e","target","placeholder","checked","width","toUpperCase","option","includes","disabled","String","fromCharCode","size","entries","_ref","powerUp","remainingDuration","stopPropagation","entry","score","Object","values","unlocked","progress","cost"],"sources":["D:/R_W/react/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { questionDatabase, getQuestionsByDifficulty, shuffleArray } from './data/questions';\r\nimport soundManager from './utils/soundManager';\r\nimport { saveScore, getTopScores, saveTheme, getTheme, saveSoundSettings, getSoundSettings, savePlayerStats } from './utils/localStorage';\r\nimport { checkAchievements, getAchievementProgress } from './utils/achievements';\r\nimport { PowerUpManager, POWER_UPS } from './utils/powerUps';\r\nimport voiceRecognition from './utils/voiceRecognition';\r\nimport aiQuestionGenerator from './utils/aiQuestionGenerator';\r\n\r\nfunction App() {\r\n  // Original useState hooks\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  // Enhanced useState hooks for new features\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [theme, setTheme] = useState('light');\r\n  const [hintsUsed, setHintsUsed] = useState(0);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [questionOrder, setQuestionOrder] = useState([]);\r\n  const [detailedResults, setDetailedResults] = useState([]);\r\n  \r\n  // Additional state for enhanced features\r\n  const [gamePhase, setGamePhase] = useState('setup'); // setup, playing, results, leaderboard\r\n  const [availableHints, setAvailableHints] = useState(3);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [eliminatedOptions, setEliminatedOptions] = useState([]);\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [questionStartTime, setQuestionStartTime] = useState(null);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n  const [category, setCategory] = useState('all');\r\n\r\n  // New advanced features state\r\n  const [currentStreak, setCurrentStreak] = useState(0);\r\n  const [longestStreak, setLongestStreak] = useState(0);\r\n  const [powerUpManager] = useState(new PowerUpManager());\r\n  const [activePowerUps, setActivePowerUps] = useState(new Map());\r\n  const [playerCoins, setPlayerCoins] = useState(0);\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [bookmarkedQuestions, setBookmarkedQuestions] = useState([]);\r\n  const [studyMode, setStudyMode] = useState(false);\r\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [adaptiveDifficulty, setAdaptiveDifficulty] = useState(false);\r\n  const [showAchievements, setShowAchievements] = useState(false);\r\n  const [showPowerUps, setShowPowerUps] = useState(false);\r\n  const [customTheme, setCustomTheme] = useState(null);\r\n  const [offlineMode, setOfflineMode] = useState(false);\r\n  const [socialShare, setSocialShare] = useState(false);\r\n  const [videoExplanations, setVideoExplanations] = useState(false);\r\n  const [learningPath, setLearningPath] = useState([]);\r\n  const [playerLevel, setPlayerLevel] = useState(1);\r\n  const [playerXP, setPlayerXP] = useState(0);\r\n\r\n  // Initialize app\r\n  useEffect(() => {\r\n    // Load saved settings\r\n    const savedTheme = getTheme();\r\n    const soundSettings = getSoundSettings();\r\n    \r\n    setTheme(savedTheme);\r\n    setIsMuted(soundSettings.muted);\r\n    \r\n    // Initialize sound manager\r\n    soundManager.initSounds();\r\n    soundManager.setVolume(soundSettings.volume);\r\n    if (soundSettings.muted) {\r\n      soundManager.toggleMute();\r\n    }\r\n    \r\n    // Load leaderboard\r\n    setLeaderboard(getTopScores());\r\n    \r\n    // Apply theme to document\r\n    document.documentElement.setAttribute('data-theme', savedTheme);\r\n  }, []);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gamePhase === 'playing' && timeLeft > 0) {\r\n      const timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n        if (timeLeft <= 10 && timeLeft > 0) {\r\n          soundManager.play('tick');\r\n        }\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0 && gamePhase === 'playing') {\r\n      handleTimeUp();\r\n    }\r\n  }, [timeLeft, gamePhase]);\r\n\r\n  // Get time limit based on difficulty\r\n  const getTimeLimit = () => {\r\n    switch (difficulty) {\r\n      case 'easy': return 45;\r\n      case 'medium': return 30;\r\n      case 'hard': return 20;\r\n      default: return 30;\r\n    }\r\n  };\r\n\r\n  // Get score multiplier based on difficulty\r\n  const getScoreMultiplier = () => {\r\n    switch (difficulty) {\r\n      case 'easy': return 1;\r\n      case 'medium': return 1.5;\r\n      case 'hard': return 2;\r\n      default: return 1;\r\n    }\r\n  };\r\n\r\n  // Start quiz\r\n  const startQuiz = () => {\r\n    if (!playerName.trim()) {\r\n      alert('Please enter your name!');\r\n      return;\r\n    }\r\n\r\n    // Get questions based on difficulty\r\n    const questions = getQuestionsByDifficulty(difficulty);\r\n    const shuffledQuestions = shuffleArray(questions).slice(0, 10); // Take 10 random questions\r\n    \r\n    setQuestionOrder(shuffledQuestions);\r\n    setGamePhase('playing');\r\n    setStartTime(Date.now());\r\n    setQuestionStartTime(Date.now());\r\n    setTimeLeft(getTimeLimit());\r\n    setCurrentQuestionIndex(0);\r\n    setTotalScore(0);\r\n    setSelectedAnswer(null);\r\n    setDetailedResults([]);\r\n    setAvailableHints(3);\r\n    setHintsUsed(0);\r\n    setShowHint(false);\r\n    setEliminatedOptions([]);\r\n  };\r\n\r\n  // Handle time up\r\n  const handleTimeUp = () => {\r\n    handleAnswerSubmit(null, true);\r\n  };\r\n\r\n  // Handle answer submission\r\n  const handleAnswerSubmit = (selectedOptionIndex, isTimeUp = false) => {\r\n    const currentQuestion = questionOrder[currentQuestionIndex];\r\n    const questionTime = Date.now() - questionStartTime;\r\n    const isCorrect = selectedOptionIndex === currentQuestion.correctAnswer;\r\n    \r\n    // Update streak\r\n    updateStreak(isCorrect);\r\n    \r\n    // Apply power-up effects\r\n    const powerUpEffects = powerUpManager.applyEffects();\r\n    \r\n    // Calculate points with power-ups\r\n    let points = 0;\r\n    if (isCorrect && !isTimeUp) {\r\n      points = Math.round(10 * getScoreMultiplier() * powerUpEffects.pointsMultiplier);\r\n      // Bonus for quick answers\r\n      if (questionTime < 10000) points += 5;\r\n      // Bonus for not using hints\r\n      if (hintsUsed === 0) points += 3;\r\n      // Streak bonus\r\n      if (currentStreak >= 3) points += currentStreak;\r\n    }\r\n\r\n    // Calculate XP gain\r\n    const xpGain = calculateXPGain(isCorrect, difficulty, questionTime < 10000 ? 5 : 0, currentStreak);\r\n    updatePlayerLevel(playerXP + xpGain);\r\n\r\n    // Calculate coins earned\r\n    const coinsEarned = PowerUpManager.calculateCoinsEarned(\r\n      isCorrect ? 1 : 0, \r\n      difficulty, \r\n      currentStreak, \r\n      questionTime < 10000 ? 5 : 0\r\n    );\r\n    powerUpManager.addCoins(coinsEarned);\r\n    setPlayerCoins(powerUpManager.getState().coins);\r\n\r\n    // Play sound\r\n    if (isTimeUp) {\r\n      soundManager.play('wrong');\r\n    } else if (isCorrect) {\r\n      soundManager.play('correct');\r\n    } else {\r\n      soundManager.play('wrong');\r\n    }\r\n\r\n    // Save detailed result\r\n    const result = {\r\n      question: currentQuestion.question,\r\n      selectedAnswer: selectedOptionIndex,\r\n      correctAnswer: currentQuestion.correctAnswer,\r\n      options: currentQuestion.options,\r\n      isCorrect,\r\n      timeSpent: questionTime,\r\n      points,\r\n      xpGained: xpGain,\r\n      coinsEarned,\r\n      streakAtTime: currentStreak,\r\n      isTimeUp,\r\n      powerUpsActive: Array.from(activePowerUps.keys())\r\n    };\r\n    \r\n    setDetailedResults(prev => [...prev, result]);\r\n    setSelectedAnswer(selectedOptionIndex);\r\n\r\n    if (isCorrect) {\r\n      setTotalScore(prev => prev + points);\r\n    }\r\n\r\n    // Update power-up durations\r\n    powerUpManager.updateDurations();\r\n    setActivePowerUps(new Map(powerUpManager.activePowerUps));\r\n\r\n    // Check for adaptive difficulty adjustment\r\n    adjustDifficultyBasedOnPerformance();\r\n\r\n    // Move to next question or show results\r\n    setTimeout(() => {\r\n      const nextQuestionIndex = currentQuestionIndex + 1;\r\n      \r\n      if (nextQuestionIndex < questionOrder.length) {\r\n        setCurrentQuestionIndex(nextQuestionIndex);\r\n        setSelectedAnswer(null);\r\n        setTimeLeft(studyMode ? 999 : getTimeLimit());\r\n        setQuestionStartTime(Date.now());\r\n        setShowHint(false);\r\n        setEliminatedOptions([]);\r\n      } else {\r\n        finishQuiz();\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  // Finish quiz\r\n  const finishQuiz = () => {\r\n    const totalTime = Date.now() - startTime;\r\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\r\n    const percentage = Math.round((correctAnswers / questionOrder.length) * 100);\r\n    \r\n    // Save score and stats\r\n    const scoreData = {\r\n      correct: correctAnswers,\r\n      total: questionOrder.length,\r\n      points: totalScore,\r\n      timeSpent: totalTime\r\n    };\r\n    \r\n    saveScore(playerName, scoreData, difficulty, category, totalTime);\r\n    \r\n    // Enhanced stats for achievements\r\n    const enhancedStats = {\r\n      totalQuestions: questionOrder.length,\r\n      correct: correctAnswers,\r\n      timeSpent: totalTime,\r\n      percentage,\r\n      difficulty,\r\n      longestStreak,\r\n      hintsUsed,\r\n      powerUpsUsed: Array.from(activePowerUps.keys()).length,\r\n      perfectScore: percentage === 100,\r\n      noHintsUsed: hintsUsed === 0\r\n    };\r\n    \r\n    savePlayerStats(enhancedStats);\r\n    \r\n    // Check for new achievements\r\n    const currentStats = {\r\n      totalQuizzes: 1, // This would be loaded from storage in real implementation\r\n      bestPercentage: percentage,\r\n      longestStreak,\r\n      achievements: achievements,\r\n      categoryStats: { [category]: { percentage } }\r\n    };\r\n    checkAndUnlockAchievements(currentStats);\r\n    \r\n    // Update leaderboard\r\n    setLeaderboard(getTopScores());\r\n    \r\n    // Play completion sound\r\n    soundManager.play('complete');\r\n    \r\n    setGamePhase('results');\r\n  };\r\n\r\n  // Use hint - 50/50\r\n  const useFiftyFifty = () => {\r\n    if (availableHints <= 0) return;\r\n    \r\n    const currentQuestion = questionOrder[currentQuestionIndex];\r\n    const correctAnswer = currentQuestion.correctAnswer;\r\n    const wrongOptions = [0, 1, 2, 3].filter(i => i !== correctAnswer);\r\n    \r\n    // Randomly select 2 wrong options to eliminate\r\n    const toEliminate = shuffleArray(wrongOptions).slice(0, 2);\r\n    setEliminatedOptions(toEliminate);\r\n    setAvailableHints(prev => prev - 1);\r\n    setHintsUsed(prev => prev + 1);\r\n    \r\n    soundManager.play('hint');\r\n  };\r\n\r\n  // Skip question\r\n  const skipQuestion = () => {\r\n    if (availableHints <= 0) return;\r\n    \r\n    setAvailableHints(prev => prev - 1);\r\n    setHintsUsed(prev => prev + 1);\r\n    handleAnswerSubmit(null, false);\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    saveTheme(newTheme);\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n  };\r\n\r\n  // Toggle sound\r\n  const toggleSound = () => {\r\n    const newMutedState = soundManager.toggleMute();\r\n    setIsMuted(newMutedState);\r\n    saveSoundSettings({ muted: newMutedState, volume: 0.5 });\r\n  };\r\n\r\n  // Restart quiz\r\n  const restartQuiz = () => {\r\n    setGamePhase('setup');\r\n    setCurrentQuestionIndex(0);\r\n    setSelectedAnswer(null);\r\n    setTotalScore(0);\r\n    setShowScore(false);\r\n    setTimeLeft(30);\r\n    setDetailedResults([]);\r\n    setAvailableHints(3);\r\n    setHintsUsed(0);\r\n    setShowHint(false);\r\n    setEliminatedOptions([]);\r\n  };\r\n\r\n  // Get current question\r\n  const currentQuestion = questionOrder[currentQuestionIndex];\r\n\r\n  // Calculate progress percentage\r\n  const progressPercentage = questionOrder.length > 0 ? \r\n    ((currentQuestionIndex) / questionOrder.length) * 100 : 0;\r\n\r\n  // Get score message\r\n  const getScoreMessage = () => {\r\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\r\n    const percentage = Math.round((correctAnswers / questionOrder.length) * 100);\r\n    if (percentage >= 90) return \"Outstanding! 🏆\";\r\n    if (percentage >= 80) return \"Excellent! 🎉\";\r\n    if (percentage >= 70) return \"Great job! 👍\";\r\n    if (percentage >= 60) return \"Good work! 👌\";\r\n    if (percentage >= 50) return \"Not bad! 😊\";\r\n    return \"Keep practicing! 💪\";\r\n  };\r\n\r\n  // New feature functions\r\n  \r\n  // Streak management\r\n  const updateStreak = (isCorrect) => {\r\n    if (isCorrect) {\r\n      const newStreak = currentStreak + 1;\r\n      setCurrentStreak(newStreak);\r\n      if (newStreak > longestStreak) {\r\n        setLongestStreak(newStreak);\r\n      }\r\n    } else {\r\n      setCurrentStreak(0);\r\n    }\r\n  };\r\n\r\n  // Power-up functions\r\n  const purchasePowerUp = (powerUpId) => {\r\n    const result = powerUpManager.purchasePowerUp(powerUpId);\r\n    if (result.success) {\r\n      setPlayerCoins(powerUpManager.getState().coins);\r\n      if (result.effect) {\r\n        // Apply instant effect\r\n        applyPowerUpEffect(result.effect);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const activatePowerUp = (powerUpId) => {\r\n    const result = powerUpManager.activatePowerUp(powerUpId);\r\n    if (result.success) {\r\n      setActivePowerUps(new Map(powerUpManager.activePowerUps));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const applyPowerUpEffect = (effect) => {\r\n    switch (effect.effect) {\r\n      case 'extra_hints':\r\n        setAvailableHints(prev => prev + effect.value);\r\n        break;\r\n      case 'time_bonus':\r\n        setTimeLeft(prev => prev + effect.value);\r\n        break;\r\n      case 'time_freeze':\r\n        // Implement time freeze logic\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Achievement system\r\n  const checkAndUnlockAchievements = (stats) => {\r\n    const newAchievements = checkAchievements(stats);\r\n    if (newAchievements.length > 0) {\r\n      setAchievements(prev => [...prev, ...newAchievements.map(a => a.id)]);\r\n      // Show achievement notification\r\n      newAchievements.forEach(achievement => {\r\n        showAchievementNotification(achievement);\r\n      });\r\n    }\r\n  };\r\n\r\n  const showAchievementNotification = (achievement) => {\r\n    // Create achievement notification\r\n    const notification = document.createElement('div');\r\n    notification.className = 'achievement-notification';\r\n    notification.innerHTML = `\r\n      <div class=\"achievement-content\">\r\n        <span class=\"achievement-icon\">${achievement.icon}</span>\r\n        <div class=\"achievement-text\">\r\n          <div class=\"achievement-name\">${achievement.name}</div>\r\n          <div class=\"achievement-description\">${achievement.description}</div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    document.body.appendChild(notification);\r\n    \r\n    // Remove after animation\r\n    setTimeout(() => {\r\n      if (notification.parentNode) {\r\n        notification.parentNode.removeChild(notification);\r\n      }\r\n    }, 4000);\r\n  };\r\n\r\n  // Voice recognition functions\r\n  const toggleVoiceRecognition = () => {\r\n    if (!voiceRecognition.isVoiceSupported()) {\r\n      alert('Voice recognition is not supported in your browser');\r\n      return;\r\n    }\r\n\r\n    if (isListening) {\r\n      voiceRecognition.stopListening();\r\n      setIsListening(false);\r\n    } else {\r\n      startVoiceListening();\r\n    }\r\n  };\r\n\r\n  const startVoiceListening = () => {\r\n    if (!currentQuestion) return;\r\n\r\n    setIsListening(true);\r\n    voiceRecognition.startListening(\r\n      currentQuestion.options,\r\n      (result) => {\r\n        setIsListening(false);\r\n        if (result.success && result.matchedOption) {\r\n          if (result.matchedOption.action) {\r\n            // Handle voice commands\r\n            handleVoiceCommand(result.matchedOption.action);\r\n          } else if (typeof result.matchedOption.index === 'number') {\r\n            // Handle answer selection\r\n            handleAnswerSubmit(result.matchedOption.index);\r\n          }\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleVoiceCommand = (command) => {\r\n    switch (command) {\r\n      case 'skip':\r\n        skipQuestion();\r\n        break;\r\n      case 'hint':\r\n      case 'fiftyFifty':\r\n        useFiftyFifty();\r\n        break;\r\n      case 'help':\r\n        speakInstructions();\r\n        break;\r\n      case 'pause':\r\n        // Implement pause functionality\r\n        break;\r\n      case 'stop':\r\n        voiceRecognition.stopListening();\r\n        setIsListening(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const speakInstructions = () => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(\r\n        'You can say A, B, C, or D to select an answer. Say skip to skip the question, or hint for help.'\r\n      );\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  // Bookmark functions\r\n  const toggleBookmark = (question) => {\r\n    setBookmarkedQuestions(prev => {\r\n      const isBookmarked = prev.some(q => q.question === question.question);\r\n      if (isBookmarked) {\r\n        return prev.filter(q => q.question !== question.question);\r\n      } else {\r\n        return [...prev, { ...question, bookmarkedAt: Date.now() }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const isQuestionBookmarked = (question) => {\r\n    return bookmarkedQuestions.some(q => q.question === question.question);\r\n  };\r\n\r\n  // Study mode functions\r\n  const toggleStudyMode = () => {\r\n    setStudyMode(!studyMode);\r\n    if (!studyMode) {\r\n      // Entering study mode - no time pressure\r\n      setTimeLeft(999);\r\n    }\r\n  };\r\n\r\n  // Adaptive difficulty\r\n  const adjustDifficultyBasedOnPerformance = () => {\r\n    if (!adaptiveDifficulty) return;\r\n\r\n    const recentPerformance = detailedResults.slice(-5); // Last 5 questions\r\n    const recentAccuracy = recentPerformance.filter(r => r.isCorrect).length / recentPerformance.length;\r\n\r\n    if (recentAccuracy >= 0.8 && difficulty === 'easy') {\r\n      setDifficulty('medium');\r\n    } else if (recentAccuracy >= 0.8 && difficulty === 'medium') {\r\n      setDifficulty('hard');\r\n    } else if (recentAccuracy <= 0.4 && difficulty === 'hard') {\r\n      setDifficulty('medium');\r\n    } else if (recentAccuracy <= 0.4 && difficulty === 'medium') {\r\n      setDifficulty('easy');\r\n    }\r\n  };\r\n\r\n  // XP and leveling system\r\n  const calculateXPGain = (isCorrect, difficulty, timeBonus, streak) => {\r\n    let xp = 0;\r\n    if (isCorrect) {\r\n      xp = 10; // Base XP\r\n      const difficultyMultiplier = { easy: 1, medium: 1.5, hard: 2 };\r\n      xp *= difficultyMultiplier[difficulty] || 1;\r\n      \r\n      // Time bonus\r\n      if (timeBonus > 0) xp += Math.floor(timeBonus / 5);\r\n      \r\n      // Streak bonus\r\n      if (streak >= 3) xp += streak * 2;\r\n    }\r\n    return Math.floor(xp);\r\n  };\r\n\r\n  const updatePlayerLevel = (newXP) => {\r\n    const xpForNextLevel = playerLevel * 100; // 100 XP per level\r\n    if (newXP >= xpForNextLevel) {\r\n      setPlayerLevel(prev => prev + 1);\r\n      setPlayerXP(newXP - xpForNextLevel);\r\n      // Show level up notification\r\n      showLevelUpNotification(playerLevel + 1);\r\n    } else {\r\n      setPlayerXP(newXP);\r\n    }\r\n  };\r\n\r\n  const showLevelUpNotification = (newLevel) => {\r\n    const notification = document.createElement('div');\r\n    notification.className = 'level-up-notification';\r\n    notification.innerHTML = `\r\n      <div class=\"level-up-content\">\r\n        <span class=\"level-up-icon\">🎉</span>\r\n        <div class=\"level-up-text\">\r\n          <div class=\"level-up-title\">Level Up!</div>\r\n          <div class=\"level-up-level\">Level ${newLevel}</div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    document.body.appendChild(notification);\r\n    \r\n    setTimeout(() => {\r\n      if (notification.parentNode) {\r\n        notification.parentNode.removeChild(notification);\r\n      }\r\n    }, 3000);\r\n  };\r\n\r\n  // Social sharing\r\n  const shareScore = (platform) => {\r\n    const correctAnswers = detailedResults.filter(r => r.isCorrect).length;\r\n    const percentage = Math.round((correctAnswers / questionOrder.length) * 100);\r\n    const text = `I just scored ${percentage}% on the Enhanced Quiz App! 🎯 Can you beat my score?`;\r\n    const url = window.location.href;\r\n\r\n    switch (platform) {\r\n      case 'twitter':\r\n        window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`);\r\n        break;\r\n      case 'facebook':\r\n        window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}&quote=${encodeURIComponent(text)}`);\r\n        break;\r\n      case 'linkedin':\r\n        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`);\r\n        break;\r\n      case 'whatsapp':\r\n        window.open(`https://wa.me/?text=${encodeURIComponent(text + ' ' + url)}`);\r\n        break;\r\n      default:\r\n        // Copy to clipboard\r\n        navigator.clipboard.writeText(text + ' ' + url);\r\n        alert('Score copied to clipboard!');\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Export results as PDF (mock implementation)\r\n  const exportResultsToPDF = () => {\r\n    // This would integrate with a PDF library like jsPDF\r\n    alert('PDF export feature would be implemented with jsPDF library');\r\n  };\r\n\r\n  // Generate AI questions\r\n  const generateAIQuestions = async () => {\r\n    try {\r\n      const aiQuestions = await aiQuestionGenerator.generateQuestions(category, difficulty, 5);\r\n      setQuestionOrder(prev => [...prev, ...aiQuestions]);\r\n    } catch (error) {\r\n      console.error('Failed to generate AI questions:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-app\">\r\n      {/* Header with controls */}\r\n      <div className=\"app-header\">\r\n        <div className=\"header-left\">\r\n          <h1 className=\"app-title\">Enhanced Quiz App</h1>\r\n          {gamePhase === 'playing' && (\r\n            <div className=\"player-stats\">\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-icon\">🔥</span>\r\n                <span className=\"stat-value\">{currentStreak}</span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-icon\">🪙</span>\r\n                <span className=\"stat-value\">{playerCoins}</span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-icon\">⭐</span>\r\n                <span className=\"stat-value\">Lv.{playerLevel}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"app-controls\">\r\n          <button className=\"control-btn\" onClick={toggleTheme} title=\"Toggle Theme\">\r\n            {theme === 'light' ? '🌙' : '☀️'}\r\n          </button>\r\n          <button className=\"control-btn\" onClick={toggleSound} title=\"Toggle Sound\">\r\n            {isMuted ? '🔇' : '🔊'}\r\n          </button>\r\n          <button \r\n            className=\"control-btn\" \r\n            onClick={toggleVoiceRecognition} \r\n            title=\"Voice Commands\"\r\n            style={{ backgroundColor: isListening ? '#ff4757' : '' }}\r\n          >\r\n            {isListening ? '🎤' : '🗣️'}\r\n          </button>\r\n          <button className=\"control-btn\" onClick={() => setShowAchievements(!showAchievements)} title=\"Achievements\">\r\n            🏅\r\n          </button>\r\n          <button className=\"control-btn\" onClick={() => setShowPowerUps(!showPowerUps)} title=\"Power-ups\">\r\n            ⚡\r\n          </button>\r\n          <button className=\"control-btn\" onClick={() => setShowLeaderboard(!showLeaderboard)} title=\"Leaderboard\">\r\n            🏆\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"quiz-container\">\r\n        {/* Setup Phase */}\r\n        {gamePhase === 'setup' && (\r\n          <div className=\"setup-section\">\r\n            <h2 className=\"setup-title\">Ready to Start?</h2>\r\n            \r\n            <div className=\"setup-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"playerName\">Your Name:</label>\r\n                <input\r\n                  id=\"playerName\"\r\n                  type=\"text\"\r\n                  value={playerName}\r\n                  onChange={(e) => setPlayerName(e.target.value)}\r\n                  placeholder=\"Enter your name\"\r\n                  className=\"name-input\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"difficulty\">Difficulty Level:</label>\r\n                <select\r\n                  id=\"difficulty\"\r\n                  value={difficulty}\r\n                  onChange={(e) => setDifficulty(e.target.value)}\r\n                  className=\"difficulty-select\"\r\n                >\r\n                  <option value=\"easy\">Easy (45s per question)</option>\r\n                  <option value=\"medium\">Medium (30s per question)</option>\r\n                  <option value=\"hard\">Hard (20s per question)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"category\">Category:</label>\r\n                <select\r\n                  id=\"category\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                  className=\"category-select\"\r\n                >\r\n                  <option value=\"all\">All Categories</option>\r\n                  <option value=\"science\">Science</option>\r\n                  <option value=\"history\">History</option>\r\n                  <option value=\"geography\">Geography</option>\r\n                  <option value=\"technology\">Technology</option>\r\n                  <option value=\"sports\">Sports</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"game-modes\">\r\n                <h3>Game Modes</h3>\r\n                <div className=\"mode-options\">\r\n                  <label className=\"mode-option\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={studyMode}\r\n                      onChange={(e) => setStudyMode(e.target.checked)}\r\n                    />\r\n                    <span className=\"mode-label\">Study Mode (No Timer)</span>\r\n                  </label>\r\n                  <label className=\"mode-option\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={adaptiveDifficulty}\r\n                      onChange={(e) => setAdaptiveDifficulty(e.target.checked)}\r\n                    />\r\n                    <span className=\"mode-label\">Adaptive Difficulty</span>\r\n                  </label>\r\n                  <label className=\"mode-option\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={voiceEnabled}\r\n                      onChange={(e) => setVoiceEnabled(e.target.checked)}\r\n                    />\r\n                    <span className=\"mode-label\">Voice Commands</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"difficulty-info\">\r\n                <p>Score Multiplier: {getScoreMultiplier()}x</p>\r\n                <p>You'll get 3 hints to help you!</p>\r\n                <p>Coins: {playerCoins} | Level: {playerLevel}</p>\r\n                {studyMode && <p>⏰ Study Mode: No time pressure!</p>}\r\n                {adaptiveDifficulty && <p>🧠 Adaptive: Difficulty adjusts to your performance</p>}\r\n                {voiceEnabled && <p>🗣️ Voice: Answer using voice commands</p>}\r\n              </div>\r\n\r\n              <div className=\"start-buttons\">\r\n                <button className=\"start-button primary\" onClick={startQuiz}>\r\n                  Start Quiz 🚀\r\n                </button>\r\n                <button className=\"start-button secondary\" onClick={generateAIQuestions}>\r\n                  Generate AI Questions 🤖\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Playing Phase */}\r\n        {gamePhase === 'playing' && currentQuestion && (\r\n          <>\r\n            {/* Progress Bar */}\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${progressPercentage}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"progress-text\">\r\n                Question {currentQuestionIndex + 1} of {questionOrder.length}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Timer */}\r\n            <div className=\"timer-container\">\r\n              <div className={`timer ${timeLeft <= 10 ? 'timer-warning' : ''}`}>\r\n                ⏰ {timeLeft}s\r\n              </div>\r\n              <div className=\"timer-bar\">\r\n                <div \r\n                  className=\"timer-fill\" \r\n                  style={{ \r\n                    width: `${(timeLeft / getTimeLimit()) * 100}%`,\r\n                    backgroundColor: timeLeft <= 10 ? '#ff4757' : '#2ed573'\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Question Section */}\r\n            <div className=\"question-section\">\r\n              <div className=\"question-header\">\r\n                <div className=\"question-category\">\r\n                  {currentQuestion.category?.toUpperCase()} - {difficulty.toUpperCase()}\r\n                </div>\r\n                <div className=\"current-score\">Score: {totalScore}</div>\r\n              </div>\r\n              \r\n              <div className=\"question-text\">\r\n                {currentQuestion.question}\r\n              </div>\r\n              \r\n              <div className=\"answer-options\">\r\n                {currentQuestion.options.map((option, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`answer-button ${eliminatedOptions.includes(index) ? 'eliminated' : ''}`}\r\n                    onClick={() => handleAnswerSubmit(index)}\r\n                    disabled={selectedAnswer !== null || eliminatedOptions.includes(index)}\r\n                    style={{\r\n                      backgroundColor: selectedAnswer === index \r\n                        ? (index === currentQuestion.correctAnswer ? '#d4edda' : '#f8d7da')\r\n                        : eliminatedOptions.includes(index) ? '#f1f2f6' : '#ffffff'\r\n                    }}\r\n                  >\r\n                    <span className=\"option-letter\">{String.fromCharCode(65 + index)}</span>\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Enhanced Hints & Power-ups Section */}\r\n              <div className=\"hints-section\">\r\n                <div className=\"hints-info\">\r\n                  <div className=\"hints-available\">Hints: {availableHints}</div>\r\n                  <div className=\"streak-display\">Streak: {currentStreak} 🔥</div>\r\n                  {isQuestionBookmarked(currentQuestion) && (\r\n                    <div className=\"bookmark-indicator\">📖 Bookmarked</div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"action-buttons\">\r\n                  <button \r\n                    className=\"hint-button\"\r\n                    onClick={useFiftyFifty}\r\n                    disabled={availableHints <= 0 || eliminatedOptions.length > 0}\r\n                    title=\"Remove 2 wrong answers\"\r\n                  >\r\n                    50/50 💡\r\n                  </button>\r\n                  <button \r\n                    className=\"hint-button\"\r\n                    onClick={skipQuestion}\r\n                    disabled={availableHints <= 0}\r\n                    title=\"Skip this question\"\r\n                  >\r\n                    Skip ⏭️\r\n                  </button>\r\n                  <button \r\n                    className=\"hint-button bookmark-btn\"\r\n                    onClick={() => toggleBookmark(currentQuestion)}\r\n                    title=\"Bookmark this question\"\r\n                  >\r\n                    {isQuestionBookmarked(currentQuestion) ? '📖' : '📝'}\r\n                  </button>\r\n                  {voiceEnabled && (\r\n                    <button \r\n                      className={`hint-button voice-btn ${isListening ? 'listening' : ''}`}\r\n                      onClick={toggleVoiceRecognition}\r\n                      title=\"Voice answer\"\r\n                    >\r\n                      {isListening ? '🎤' : '🗣️'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Active Power-ups Display */}\r\n                {activePowerUps.size > 0 && (\r\n                  <div className=\"active-powerups\">\r\n                    <div className=\"powerups-title\">Active Power-ups:</div>\r\n                    <div className=\"powerups-list\">\r\n                      {Array.from(activePowerUps.entries()).map(([id, powerUp]) => (\r\n                        <div key={id} className=\"active-powerup\">\r\n                          <span className=\"powerup-icon\">{powerUp.icon}</span>\r\n                          <span className=\"powerup-name\">{powerUp.name}</span>\r\n                          <span className=\"powerup-duration\">({powerUp.remainingDuration})</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Voice Recognition Status */}\r\n                {isListening && (\r\n                  <div className=\"voice-status\">\r\n                    <div className=\"voice-indicator\">🎤 Listening...</div>\r\n                    <div className=\"voice-help\">Say A, B, C, D or \"hint\", \"skip\"</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Results Phase */}\r\n        {gamePhase === 'results' && (\r\n          <div className=\"results-section\">\r\n            <h2 className=\"results-title\">Quiz Complete! 🎉</h2>\r\n            \r\n            <div className=\"score-summary\">\r\n              <div className=\"final-score\">\r\n                <div className=\"score-number\">{totalScore}</div>\r\n                <div className=\"score-label\">Total Points</div>\r\n              </div>\r\n              \r\n              <div className=\"score-stats\">\r\n                <div className=\"stat\">\r\n                  <span className=\"stat-value\">\r\n                    {detailedResults.filter(r => r.isCorrect).length}/{questionOrder.length}\r\n                  </span>\r\n                  <span className=\"stat-label\">Correct</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span className=\"stat-value\">\r\n                    {Math.round((detailedResults.filter(r => r.isCorrect).length / questionOrder.length) * 100)}%\r\n                  </span>\r\n                  <span className=\"stat-label\">Accuracy</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span className=\"stat-value\">{difficulty}</span>\r\n                  <span className=\"stat-label\">Difficulty</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"score-message\">\r\n              {getScoreMessage()}\r\n            </div>\r\n\r\n            {/* Detailed Results */}\r\n            <div className=\"detailed-results\">\r\n              <h3>Question Review</h3>\r\n              {detailedResults.map((result, index) => (\r\n                <div key={index} className={`result-item ${result.isCorrect ? 'correct' : 'incorrect'}`}>\r\n                  <div className=\"result-header\">\r\n                    <span className=\"question-number\">Q{index + 1}</span>\r\n                    <span className={`result-status ${result.isCorrect ? 'correct' : 'incorrect'}`}>\r\n                      {result.isCorrect ? '✅' : '❌'}\r\n                    </span>\r\n                    <span className=\"result-points\">+{result.points} pts</span>\r\n                  </div>\r\n                  <div className=\"result-question\">{result.question}</div>\r\n                  <div className=\"result-answers\">\r\n                    <div className=\"your-answer\">\r\n                      Your answer: {result.selectedAnswer !== null ? result.options[result.selectedAnswer] : 'No answer'}\r\n                    </div>\r\n                    {!result.isCorrect && (\r\n                      <div className=\"correct-answer\">\r\n                        Correct answer: {result.options[result.correctAnswer]}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"result-time\">\r\n                    Time: {Math.round(result.timeSpent / 1000)}s\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Enhanced Results Actions */}\r\n            <div className=\"results-actions\">\r\n              <div className=\"primary-actions\">\r\n                <button className=\"action-button primary\" onClick={restartQuiz}>\r\n                  Play Again 🔄\r\n                </button>\r\n                <button className=\"action-button secondary\" onClick={() => setShowLeaderboard(true)}>\r\n                  View Leaderboard 🏆\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"secondary-actions\">\r\n                <button className=\"action-button tertiary\" onClick={() => setShowAchievements(true)}>\r\n                  Achievements 🏅\r\n                </button>\r\n                <button className=\"action-button tertiary\" onClick={exportResultsToPDF}>\r\n                  Export PDF 📄\r\n                </button>\r\n                <button className=\"action-button tertiary\" onClick={() => setSocialShare(true)}>\r\n                  Share Score 📱\r\n                </button>\r\n              </div>\r\n\r\n              {/* Social Sharing */}\r\n              {socialShare && (\r\n                <div className=\"social-share\">\r\n                  <h4>Share Your Score</h4>\r\n                  <div className=\"share-buttons\">\r\n                    <button onClick={() => shareScore('twitter')} className=\"share-btn twitter\">\r\n                      🐦 Twitter\r\n                    </button>\r\n                    <button onClick={() => shareScore('facebook')} className=\"share-btn facebook\">\r\n                      📘 Facebook\r\n                    </button>\r\n                    <button onClick={() => shareScore('linkedin')} className=\"share-btn linkedin\">\r\n                      💼 LinkedIn\r\n                    </button>\r\n                    <button onClick={() => shareScore('whatsapp')} className=\"share-btn whatsapp\">\r\n                      💬 WhatsApp\r\n                    </button>\r\n                    <button onClick={() => shareScore('copy')} className=\"share-btn copy\">\r\n                      📋 Copy Link\r\n                    </button>\r\n                  </div>\r\n                  <button onClick={() => setSocialShare(false)} className=\"close-share\">\r\n                    ✕ Close\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {/* XP and Level Progress */}\r\n              <div className=\"level-progress\">\r\n                <div className=\"level-info\">\r\n                  <span>Level {playerLevel}</span>\r\n                  <span>{playerXP} / {playerLevel * 100} XP</span>\r\n                </div>\r\n                <div className=\"xp-bar\">\r\n                  <div \r\n                    className=\"xp-fill\" \r\n                    style={{ width: `${(playerXP / (playerLevel * 100)) * 100}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Leaderboard Modal */}\r\n        {showLeaderboard && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowLeaderboard(false)}>\r\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h3>🏆 Leaderboard</h3>\r\n                <button className=\"close-button\" onClick={() => setShowLeaderboard(false)}>×</button>\r\n              </div>\r\n              <div className=\"leaderboard-list\">\r\n                {leaderboard.length === 0 ? (\r\n                  <p>No scores yet. Be the first to play!</p>\r\n                ) : (\r\n                  leaderboard.map((entry, index) => (\r\n                    <div key={entry.id} className=\"leaderboard-entry\">\r\n                      <div className=\"rank\">#{index + 1}</div>\r\n                      <div className=\"player-info\">\r\n                        <div className=\"player-name\">{entry.playerName}</div>\r\n                        <div className=\"player-details\">\r\n                          {entry.score.correct}/{entry.score.total} correct • {entry.difficulty} • {entry.percentage}%\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"player-score\">{entry.score.points} pts</div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Achievements Modal */}\r\n        {showAchievements && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowAchievements(false)}>\r\n            <div className=\"modal-content achievements-modal\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h3>🏅 Achievements</h3>\r\n                <button className=\"close-button\" onClick={() => setShowAchievements(false)}>×</button>\r\n              </div>\r\n              <div className=\"achievements-grid\">\r\n                {Object.values(getAchievementProgress({})).map((achievement) => (\r\n                  <div \r\n                    key={achievement.id} \r\n                    className={`achievement-card ${achievement.unlocked ? 'unlocked' : 'locked'}`}\r\n                  >\r\n                    <div className=\"achievement-icon\">{achievement.icon}</div>\r\n                    <div className=\"achievement-info\">\r\n                      <div className=\"achievement-name\">{achievement.name}</div>\r\n                      <div className=\"achievement-description\">{achievement.description}</div>\r\n                      <div className=\"achievement-progress\">\r\n                        <div className=\"progress-bar\">\r\n                          <div \r\n                            className=\"progress-fill\" \r\n                            style={{ width: `${achievement.progress}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <span className=\"progress-text\">{Math.round(achievement.progress)}%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Power-ups Modal */}\r\n        {showPowerUps && (\r\n          <div className=\"modal-overlay\" onClick={() => setShowPowerUps(false)}>\r\n            <div className=\"modal-content powerups-modal\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <h3>⚡ Power-ups Shop</h3>\r\n                <div className=\"coins-display\">🪙 {playerCoins} coins</div>\r\n                <button className=\"close-button\" onClick={() => setShowPowerUps(false)}>×</button>\r\n              </div>\r\n              <div className=\"powerups-grid\">\r\n                {Object.values(POWER_UPS).map((powerUp) => (\r\n                  <div key={powerUp.id} className=\"powerup-card\">\r\n                    <div className=\"powerup-icon\">{powerUp.icon}</div>\r\n                    <div className=\"powerup-info\">\r\n                      <div className=\"powerup-name\">{powerUp.name}</div>\r\n                      <div className=\"powerup-description\">{powerUp.description}</div>\r\n                      <div className=\"powerup-cost\">💰 {powerUp.cost} coins</div>\r\n                    </div>\r\n                    <button \r\n                      className=\"powerup-buy-btn\"\r\n                      onClick={() => purchasePowerUp(powerUp.id)}\r\n                      disabled={playerCoins < powerUp.cost}\r\n                    >\r\n                      {playerCoins >= powerUp.cost ? 'Buy' : 'Not enough coins'}\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}