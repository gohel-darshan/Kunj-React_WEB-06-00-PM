{"ast":null,"code":"// Power-ups system for enhanced gameplay\nexport const POWER_UPS = {\n  DOUBLE_POINTS: {\n    id: 'double_points',\n    name: 'Double Points',\n    description: 'Double points for the next 3 questions',\n    icon: 'üíé',\n    cost: 100,\n    duration: 3,\n    effect: 'multiplier',\n    value: 2\n  },\n  EXTRA_TIME: {\n    id: 'extra_time',\n    name: 'Extra Time',\n    description: 'Add 15 seconds to current question',\n    icon: '‚è∞',\n    cost: 50,\n    duration: 1,\n    effect: 'time_bonus',\n    value: 15\n  },\n  FREEZE_TIME: {\n    id: 'freeze_time',\n    name: 'Freeze Time',\n    description: 'Stop the timer for 10 seconds',\n    icon: '‚ùÑÔ∏è',\n    cost: 75,\n    duration: 1,\n    effect: 'time_freeze',\n    value: 10\n  },\n  LUCKY_GUESS: {\n    id: 'lucky_guess',\n    name: 'Lucky Guess',\n    description: 'Automatically get the next question right',\n    icon: 'üçÄ',\n    cost: 150,\n    duration: 1,\n    effect: 'auto_correct',\n    value: 1\n  },\n  HINT_MASTER: {\n    id: 'hint_master',\n    name: 'Hint Master',\n    description: 'Get 3 extra hints',\n    icon: 'üí°',\n    cost: 80,\n    duration: 0,\n    effect: 'extra_hints',\n    value: 3\n  },\n  SHIELD: {\n    id: 'shield',\n    name: 'Shield',\n    description: 'Next wrong answer won\\'t count against you',\n    icon: 'üõ°Ô∏è',\n    cost: 120,\n    duration: 1,\n    effect: 'mistake_protection',\n    value: 1\n  },\n  CATEGORY_REVEAL: {\n    id: 'category_reveal',\n    name: 'Category Reveal',\n    description: 'Show the category for next 5 questions',\n    icon: 'üîç',\n    cost: 60,\n    duration: 5,\n    effect: 'category_hint',\n    value: 1\n  },\n  STREAK_SAVER: {\n    id: 'streak_saver',\n    name: 'Streak Saver',\n    description: 'Maintain streak even if you get one wrong',\n    icon: 'üîó',\n    cost: 90,\n    duration: 1,\n    effect: 'streak_protection',\n    value: 1\n  }\n};\nexport class PowerUpManager {\n  constructor() {\n    this.activePowerUps = new Map();\n    this.playerCoins = 0;\n  }\n\n  // Initialize with saved data\n  initialize(savedData) {\n    this.playerCoins = savedData.coins || 0;\n    this.activePowerUps = new Map(savedData.activePowerUps || []);\n  }\n\n  // Purchase a power-up\n  purchasePowerUp(powerUpId) {\n    const powerUp = POWER_UPS[powerUpId];\n    if (!powerUp || this.playerCoins < powerUp.cost) {\n      return {\n        success: false,\n        message: 'Insufficient coins'\n      };\n    }\n    this.playerCoins -= powerUp.cost;\n\n    // Add to inventory or activate immediately\n    if (powerUp.duration === 0) {\n      // Instant effect power-ups\n      return {\n        success: true,\n        message: 'Power-up activated!',\n        effect: powerUp\n      };\n    } else {\n      // Duration-based power-ups\n      this.activePowerUps.set(powerUpId, {\n        ...powerUp,\n        remainingDuration: powerUp.duration,\n        activated: false\n      });\n      return {\n        success: true,\n        message: 'Power-up ready to use!'\n      };\n    }\n  }\n\n  // Activate a power-up\n  activatePowerUp(powerUpId) {\n    const powerUp = this.activePowerUps.get(powerUpId);\n    if (!powerUp) {\n      return {\n        success: false,\n        message: 'Power-up not available'\n      };\n    }\n    powerUp.activated = true;\n    return {\n      success: true,\n      effect: powerUp\n    };\n  }\n\n  // Apply power-up effects\n  applyEffects(context) {\n    const effects = {\n      pointsMultiplier: 1,\n      timeBonus: 0,\n      autoCorrect: false,\n      mistakeProtection: false,\n      streakProtection: false,\n      categoryHint: false\n    };\n    this.activePowerUps.forEach((powerUp, id) => {\n      if (!powerUp.activated) return;\n      switch (powerUp.effect) {\n        case 'multiplier':\n          effects.pointsMultiplier *= powerUp.value;\n          break;\n        case 'time_bonus':\n          effects.timeBonus += powerUp.value;\n          break;\n        case 'auto_correct':\n          effects.autoCorrect = true;\n          break;\n        case 'mistake_protection':\n          effects.mistakeProtection = true;\n          break;\n        case 'streak_protection':\n          effects.streakProtection = true;\n          break;\n        case 'category_hint':\n          effects.categoryHint = true;\n          break;\n      }\n    });\n    return effects;\n  }\n\n  // Reduce duration after each question\n  updateDurations() {\n    const toRemove = [];\n    this.activePowerUps.forEach((powerUp, id) => {\n      if (powerUp.activated) {\n        powerUp.remainingDuration--;\n        if (powerUp.remainingDuration <= 0) {\n          toRemove.push(id);\n        }\n      }\n    });\n    toRemove.forEach(id => this.activePowerUps.delete(id));\n  }\n\n  // Add coins (earned from quiz performance)\n  addCoins(amount) {\n    this.playerCoins += amount;\n  }\n\n  // Get current state\n  getState() {\n    return {\n      coins: this.playerCoins,\n      activePowerUps: Array.from(this.activePowerUps.entries()),\n      availablePowerUps: Object.values(POWER_UPS)\n    };\n  }\n\n  // Calculate coins earned from quiz performance\n  static calculateCoinsEarned(score, difficulty, streak, timeBonus) {\n    let coins = score * 2; // Base: 2 coins per correct answer\n\n    // Difficulty bonus\n    const difficultyMultiplier = {\n      easy: 1,\n      medium: 1.5,\n      hard: 2\n    };\n    coins *= difficultyMultiplier[difficulty] || 1;\n\n    // Streak bonus\n    if (streak >= 5) coins += streak * 2;\n\n    // Time bonus\n    if (timeBonus > 0) coins += Math.floor(timeBonus / 5);\n    return Math.floor(coins);\n  }\n}","map":{"version":3,"names":["POWER_UPS","DOUBLE_POINTS","id","name","description","icon","cost","duration","effect","value","EXTRA_TIME","FREEZE_TIME","LUCKY_GUESS","HINT_MASTER","SHIELD","CATEGORY_REVEAL","STREAK_SAVER","PowerUpManager","constructor","activePowerUps","Map","playerCoins","initialize","savedData","coins","purchasePowerUp","powerUpId","powerUp","success","message","set","remainingDuration","activated","activatePowerUp","get","applyEffects","context","effects","pointsMultiplier","timeBonus","autoCorrect","mistakeProtection","streakProtection","categoryHint","forEach","updateDurations","toRemove","push","delete","addCoins","amount","getState","Array","from","entries","availablePowerUps","Object","values","calculateCoinsEarned","score","difficulty","streak","difficultyMultiplier","easy","medium","hard","Math","floor"],"sources":["D:/R_W/react/quiz-app/src/utils/powerUps.js"],"sourcesContent":["// Power-ups system for enhanced gameplay\r\nexport const POWER_UPS = {\r\n  DOUBLE_POINTS: {\r\n    id: 'double_points',\r\n    name: 'Double Points',\r\n    description: 'Double points for the next 3 questions',\r\n    icon: 'üíé',\r\n    cost: 100,\r\n    duration: 3,\r\n    effect: 'multiplier',\r\n    value: 2\r\n  },\r\n  EXTRA_TIME: {\r\n    id: 'extra_time',\r\n    name: 'Extra Time',\r\n    description: 'Add 15 seconds to current question',\r\n    icon: '‚è∞',\r\n    cost: 50,\r\n    duration: 1,\r\n    effect: 'time_bonus',\r\n    value: 15\r\n  },\r\n  FREEZE_TIME: {\r\n    id: 'freeze_time',\r\n    name: 'Freeze Time',\r\n    description: 'Stop the timer for 10 seconds',\r\n    icon: '‚ùÑÔ∏è',\r\n    cost: 75,\r\n    duration: 1,\r\n    effect: 'time_freeze',\r\n    value: 10\r\n  },\r\n  LUCKY_GUESS: {\r\n    id: 'lucky_guess',\r\n    name: 'Lucky Guess',\r\n    description: 'Automatically get the next question right',\r\n    icon: 'üçÄ',\r\n    cost: 150,\r\n    duration: 1,\r\n    effect: 'auto_correct',\r\n    value: 1\r\n  },\r\n  HINT_MASTER: {\r\n    id: 'hint_master',\r\n    name: 'Hint Master',\r\n    description: 'Get 3 extra hints',\r\n    icon: 'üí°',\r\n    cost: 80,\r\n    duration: 0,\r\n    effect: 'extra_hints',\r\n    value: 3\r\n  },\r\n  SHIELD: {\r\n    id: 'shield',\r\n    name: 'Shield',\r\n    description: 'Next wrong answer won\\'t count against you',\r\n    icon: 'üõ°Ô∏è',\r\n    cost: 120,\r\n    duration: 1,\r\n    effect: 'mistake_protection',\r\n    value: 1\r\n  },\r\n  CATEGORY_REVEAL: {\r\n    id: 'category_reveal',\r\n    name: 'Category Reveal',\r\n    description: 'Show the category for next 5 questions',\r\n    icon: 'üîç',\r\n    cost: 60,\r\n    duration: 5,\r\n    effect: 'category_hint',\r\n    value: 1\r\n  },\r\n  STREAK_SAVER: {\r\n    id: 'streak_saver',\r\n    name: 'Streak Saver',\r\n    description: 'Maintain streak even if you get one wrong',\r\n    icon: 'üîó',\r\n    cost: 90,\r\n    duration: 1,\r\n    effect: 'streak_protection',\r\n    value: 1\r\n  }\r\n};\r\n\r\nexport class PowerUpManager {\r\n  constructor() {\r\n    this.activePowerUps = new Map();\r\n    this.playerCoins = 0;\r\n  }\r\n\r\n  // Initialize with saved data\r\n  initialize(savedData) {\r\n    this.playerCoins = savedData.coins || 0;\r\n    this.activePowerUps = new Map(savedData.activePowerUps || []);\r\n  }\r\n\r\n  // Purchase a power-up\r\n  purchasePowerUp(powerUpId) {\r\n    const powerUp = POWER_UPS[powerUpId];\r\n    if (!powerUp || this.playerCoins < powerUp.cost) {\r\n      return { success: false, message: 'Insufficient coins' };\r\n    }\r\n\r\n    this.playerCoins -= powerUp.cost;\r\n    \r\n    // Add to inventory or activate immediately\r\n    if (powerUp.duration === 0) {\r\n      // Instant effect power-ups\r\n      return { success: true, message: 'Power-up activated!', effect: powerUp };\r\n    } else {\r\n      // Duration-based power-ups\r\n      this.activePowerUps.set(powerUpId, {\r\n        ...powerUp,\r\n        remainingDuration: powerUp.duration,\r\n        activated: false\r\n      });\r\n      return { success: true, message: 'Power-up ready to use!' };\r\n    }\r\n  }\r\n\r\n  // Activate a power-up\r\n  activatePowerUp(powerUpId) {\r\n    const powerUp = this.activePowerUps.get(powerUpId);\r\n    if (!powerUp) {\r\n      return { success: false, message: 'Power-up not available' };\r\n    }\r\n\r\n    powerUp.activated = true;\r\n    return { success: true, effect: powerUp };\r\n  }\r\n\r\n  // Apply power-up effects\r\n  applyEffects(context) {\r\n    const effects = {\r\n      pointsMultiplier: 1,\r\n      timeBonus: 0,\r\n      autoCorrect: false,\r\n      mistakeProtection: false,\r\n      streakProtection: false,\r\n      categoryHint: false\r\n    };\r\n\r\n    this.activePowerUps.forEach((powerUp, id) => {\r\n      if (!powerUp.activated) return;\r\n\r\n      switch (powerUp.effect) {\r\n        case 'multiplier':\r\n          effects.pointsMultiplier *= powerUp.value;\r\n          break;\r\n        case 'time_bonus':\r\n          effects.timeBonus += powerUp.value;\r\n          break;\r\n        case 'auto_correct':\r\n          effects.autoCorrect = true;\r\n          break;\r\n        case 'mistake_protection':\r\n          effects.mistakeProtection = true;\r\n          break;\r\n        case 'streak_protection':\r\n          effects.streakProtection = true;\r\n          break;\r\n        case 'category_hint':\r\n          effects.categoryHint = true;\r\n          break;\r\n      }\r\n    });\r\n\r\n    return effects;\r\n  }\r\n\r\n  // Reduce duration after each question\r\n  updateDurations() {\r\n    const toRemove = [];\r\n    \r\n    this.activePowerUps.forEach((powerUp, id) => {\r\n      if (powerUp.activated) {\r\n        powerUp.remainingDuration--;\r\n        if (powerUp.remainingDuration <= 0) {\r\n          toRemove.push(id);\r\n        }\r\n      }\r\n    });\r\n\r\n    toRemove.forEach(id => this.activePowerUps.delete(id));\r\n  }\r\n\r\n  // Add coins (earned from quiz performance)\r\n  addCoins(amount) {\r\n    this.playerCoins += amount;\r\n  }\r\n\r\n  // Get current state\r\n  getState() {\r\n    return {\r\n      coins: this.playerCoins,\r\n      activePowerUps: Array.from(this.activePowerUps.entries()),\r\n      availablePowerUps: Object.values(POWER_UPS)\r\n    };\r\n  }\r\n\r\n  // Calculate coins earned from quiz performance\r\n  static calculateCoinsEarned(score, difficulty, streak, timeBonus) {\r\n    let coins = score * 2; // Base: 2 coins per correct answer\r\n    \r\n    // Difficulty bonus\r\n    const difficultyMultiplier = { easy: 1, medium: 1.5, hard: 2 };\r\n    coins *= difficultyMultiplier[difficulty] || 1;\r\n    \r\n    // Streak bonus\r\n    if (streak >= 5) coins += streak * 2;\r\n    \r\n    // Time bonus\r\n    if (timeBonus > 0) coins += Math.floor(timeBonus / 5);\r\n    \r\n    return Math.floor(coins);\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}