{"ast":null,"code":"var _jsxFileName = \"D:\\\\R_W\\\\react\\\\new_quize_app\\\\quiz-app\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Timer from './Timer';\nimport ProgressBar from './ProgressBar';\nimport { useQuiz } from '../hooks/useQuiz';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    questions,\n    currentQuestionIndex,\n    score,\n    totalQuestions,\n    isQuizFinished,\n    handleAnswerOptionClick,\n    resetQuiz\n  } = useQuiz();\n  const [showResult, setShowResult] = useState(false);\n  useEffect(() => {\n    if (isQuizFinished) {\n      setShowResult(true);\n    }\n  }, [isQuizFinished]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showResult ? /*#__PURE__*/_jsxDEV(Result, {\n      score: score,\n      totalQuestions: totalQuestions,\n      resetQuiz: resetQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        currentQuestionIndex: currentQuestionIndex,\n        totalQuestions: totalQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        question: questions[currentQuestionIndex],\n        onAnswerOptionClick: handleAnswerOptionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"ohtqT6CaqtmcvI1MKSWu2fRyDO4=\", false, function () {\n  return [useQuiz];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Question","Result","Timer","ProgressBar","useQuiz","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","currentQuestionIndex","score","totalQuestions","isQuizFinished","handleAnswerOptionClick","resetQuiz","showResult","setShowResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","onAnswerOptionClick","_c","$RefreshReg$"],"sources":["D:/R_W/react/new_quize_app/quiz-app/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Timer from './Timer';\nimport ProgressBar from './ProgressBar';\nimport { useQuiz } from '../hooks/useQuiz';\nimport './Quiz.css';\n\nconst Quiz = () => {\n    const {\n        questions,\n        currentQuestionIndex,\n        score,\n        totalQuestions,\n        isQuizFinished,\n        handleAnswerOptionClick,\n        resetQuiz,\n    } = useQuiz();\n\n    const [showResult, setShowResult] = useState(false);\n\n    useEffect(() => {\n        if (isQuizFinished) {\n            setShowResult(true);\n        }\n    }, [isQuizFinished]);\n\n    return (\n        <div className=\"quiz-container\">\n            {showResult ? (\n                <Result score={score} totalQuestions={totalQuestions} resetQuiz={resetQuiz} />\n            ) : (\n                <>\n                    <ProgressBar currentQuestionIndex={currentQuestionIndex} totalQuestions={totalQuestions} />\n                    <Timer />\n                    <Question\n                        question={questions[currentQuestionIndex]}\n                        onAnswerOptionClick={handleAnswerOptionClick}\n                    />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IACFC,SAAS;IACTC,oBAAoB;IACpBC,KAAK;IACLC,cAAc;IACdC,cAAc;IACdC,uBAAuB;IACvBC;EACJ,CAAC,GAAGb,OAAO,CAAC,CAAC;EAEb,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,IAAIgB,cAAc,EAAE;MAChBI,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,oBACIT,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BH,UAAU,gBACPZ,OAAA,CAACL,MAAM;MAACY,KAAK,EAAEA,KAAM;MAACC,cAAc,EAAEA,cAAe;MAACG,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9EnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACIf,OAAA,CAACH,WAAW;QAACS,oBAAoB,EAAEA,oBAAqB;QAACE,cAAc,EAAEA;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3FnB,OAAA,CAACJ,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTnB,OAAA,CAACN,QAAQ;QACL0B,QAAQ,EAAEf,SAAS,CAACC,oBAAoB,CAAE;QAC1Ce,mBAAmB,EAAEX;MAAwB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA,eACJ;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAnCID,IAAI;EAAA,QASFL,OAAO;AAAA;AAAAwB,EAAA,GATTnB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}